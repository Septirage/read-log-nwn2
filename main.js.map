{"version":3,"sources":["js/global.js","js/main.js"],"names":["domLoaded","navigatorLangFR","test","navigator","language","document","querySelectorAll","forEach","thisDom","textContent","dataset","fr","en","getElementById","value","addEventListener","event","warningInfo","querySelector","allFiles","initFileList","files","listFiles","chatLog","style","display","length","openFiles","setStaticsEvents","resizeResult","logFilesDef","traducFilesDef","thisFile","isFolder","webkitRelativePath","match","isChatLog","name","isCombatLog","push","languesLog","setupFileListing","fileListe","search","occurences","listingFilesUl","allFilesLi","index","oldSelection","innerHTML","fileIndexInfo","fileName","slice","toString","classSelected","founded","thisNewLi","join","gotToLiSelected","classList","add","scrollIntoView","behavior","block","inline","setDynamicsEvents","statsInfo","e","offsetWidth","width","minWidth","replace","contains","remove","popupSearchFiles","container","navigBtns","selectedLi","allLi","indexToNavig","click","termToSearch","verifSpaces","checkByDate","verifCheckByDate","checked","dateChoosen","openSearch","popupSearch","stopImmediatePropagation","elem","target","closest","id","options","fileContent","thisOption","columnsTargeted","sortFiles","thisCol","clickedLiListe","thisLi","liSelected","updateNavig","listeLi","onclick","clickedBtnSearch","preventDefault","inputTermToSearch","newFileListe","trim","searchOptions","updateListeFilesByDate","alert","thisBtn","itemLi","filesTotal","filePrev","fileNext","fileNum","toSort","fileListing","fileSelected","scrollPos","chooseDate","dateDeb","dateFin","thisFileName","matchDate","splice","tableResultListeners","clickedLine","thisLine","className","getLineValue","jumpToLine","focus","lineResult","cellPjFullName","popupFullName","mouseIn","innerText","fullname","color","top","getBoundingClientRect","left","mouseOut","fullName","onmouseenter","onmouseleave","statsInfoDetails","loop","allLinesPj","numpj","previousElementSibling","maxSpeech","thisPjNum","line","btn","btnPlus","btnMoins","currentIndex","lineLi","searchResult","resize","containerHeight","offsetHeight","posPrct","y","height","handle","removeEventListener","mode","body","listeFiles","fileindex","languesLines","allPos","filePromise","Promise","resolve","fileReader","FileReader","readAsText","onloadend","result","all","then","fileContents","matchLineSearch","thisLogFormatted","RegExp","newLine","exec","file","lines","JSON","stringify","searchInFile","datas","numPos","sort","a","b","localeCompare","item","liToSelect","searchFail","searchFailedMsg","termTosearch","processLog","thisLog","stringToFind","newMessage","regEx","arrayResult","languageInThisLog","parse","resultSearchLang","find","maj","checkCasse","wholeWord","undefined","matchWord","lastIndex","indexOf","whileMatch","messageType","toLowerCase","message","replaceAll","msgExcludeMp","msgExcludeShout","msgExcludeParty","numLigne","filename","resultByLine","fileContentTable","resultByLineTable","filePjName","listColors","refResult","getRef","addRefLine","formattedTraducByLine","lineColorByName","formattedContent","formattedSearch","indexLine","getFileLangue","heure","pseudo","pjName","msgType","msg","msgClass","hideLinePseudo","hideLineMsgType","indexPjName","names","lineColor","colors","formatMsg","emotes","split","emote","includes","searchedLine","searchedLineTraduc","withTraduc","getLangueLine","filter","thisItemLangue","shift","formattedLine","btnGoSearch","frNext","enNext","liLineName","generateColors","unLog","listeColors","num","tblPjName","uneLigne","thePjName","readyState","documentElement","doScroll","module","hot","accept","window","location","reload"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["const domLoaded = function () {\r\n\r\n   // Détection de la langue\r\n\r\n   let navigatorLangFR = /^fr\\b/.test(navigator.language)\r\n   const domToTranslate = document.querySelectorAll(\"[data-fr]\")\r\n\r\n   domToTranslate.forEach(thisDom => {\r\n      if (navigatorLangFR) {\r\n         thisDom.textContent = thisDom.dataset.fr\r\n      } else {\r\n         thisDom.textContent = thisDom.dataset.en\r\n      }\r\n   })\r\n\r\n   document.getElementById('arrayRefSearch').value = ''\r\n   document.getElementById('languesListeRef').value = ''\r\n\r\n   const folderPicker = document.getElementById(\"folderPicker\")\r\n   folderPicker.addEventListener(\"change\", function (event) {\r\n\r\n      const warningInfo = document.querySelector('.warning_info')\r\n      let allFiles = initFileList(this.files)\r\n      let listFiles = allFiles.chatLog\r\n\r\n      warningInfo.style.display = 'none'\r\n\r\n      if (listFiles.length > 0) {\r\n         // Récupère les langues\r\n         openFiles(allFiles, 'langues', '')\r\n\r\n      } else {\r\n         warningInfo.style.display = 'flex'\r\n      }\r\n   })\r\n\r\n   setStaticsEvents(document.getElementById('listing'))\r\n   resizeResult()\r\n\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n//    INITIALISATION DE LA LISTE DES FICHIERS\r\n// ---------------------------------------------------------\r\nconst initFileList = (listFiles) => {\r\n\r\n   let logFilesDef = []\r\n   let traducFilesDef = []\r\n\r\n   for (let thisFile of listFiles) {\r\n\r\n      let isFolder = thisFile.webkitRelativePath.match(/[/]/g).length !== 1\r\n      let isChatLog = thisFile.name.match('Chatlog')\r\n      let isCombatLog = thisFile.name.match('Combatlog')\r\n\r\n      if (!isFolder) {\r\n         if (isChatLog)\r\n            logFilesDef.push(thisFile)\r\n         if (isCombatLog) {\r\n            traducFilesDef.push(thisFile)\r\n         }\r\n      }\r\n\r\n   }\r\n\r\n   return {chatLog: logFilesDef, languesLog: traducFilesDef}\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    CHARGEMENT DE LA LISTE DES FICHIERS DANS UL#LISTING\r\n// ---------------------------------------------------------\r\nconst setupFileListing = (fileListe, search, occurences) => {\r\n\r\n   const listingFilesUl = document.getElementById('listing')\r\n   const regexName = /(.*?)(?=\\(|_(Chatlog.*?)$)/g\r\n   let allFilesLi = []\r\n   let index = 0\r\n\r\n   let oldSelection = listingFilesUl.querySelector('.selected')\r\n   if (oldSelection !== null)\r\n      oldSelection = oldSelection.querySelector('span:nth-child(2)').textContent\r\n   else\r\n      oldSelection = ''\r\n\r\n   listingFilesUl.innerHTML = ''\r\n\r\n   for (let thisFile of fileListe) {\r\n\r\n      let fileName = thisFile.name.slice(0, -4)\r\n      let fileIndexInfo = (index + 1).toString()\r\n\r\n      while (fileIndexInfo.length <= (fileListe.length).toString().length) {\r\n         fileIndexInfo = `0${fileIndexInfo}`\r\n      }\r\n\r\n      let classSelected = ''\r\n\r\n      if (oldSelection === fileName || (oldSelection === '' && index === 0)) {\r\n         classSelected = 'selected'\r\n      }\r\n\r\n      let founded = search ? `<span class=\"founded\">${occurences[index]}</span>` : ''\r\n\r\n      let thisNewLi = `<li class=\"${classSelected}\" data-index=\"${index}\" ><span>${fileIndexInfo}</span><span>${fileName}</span>${founded}</li>`\r\n\r\n      allFilesLi.push(thisNewLi)\r\n      index++\r\n   }\r\n\r\n   listingFilesUl.innerHTML = allFilesLi.join('')\r\n\r\n   let gotToLiSelected = listingFilesUl.querySelector('.selected')\r\n   if (!gotToLiSelected) {\r\n      gotToLiSelected = listingFilesUl.querySelector('li:first-child')\r\n      gotToLiSelected.classList.add('selected')\r\n   }\r\n   gotToLiSelected.scrollIntoView({behavior: \"smooth\", block: 'start', inline: 'start'})\r\n\r\n   setDynamicsEvents(listingFilesUl, fileListe)\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    LISTENERS STATIQUES\r\n// ---------------------------------------------------------\r\nconst setStaticsEvents = (listingFilesUl) => {\r\n\r\n   // AFFICHE LES INFOS DU LOG\r\n   const statsInfo = document.getElementById('statsInfo')\r\n\r\n   statsInfo.querySelector('.icon').addEventListener(\"click\", function (e) {\r\n\r\n      if (statsInfo.offsetWidth === 0) {\r\n\r\n         statsInfo.style.width = '260px'//blocDetails.offsetWidth + 16 +14\r\n         statsInfo.style.minWidth = '260px'//blocDetails.offsetWidth + 16 +14\r\n         this.classList.replace('close', 'open')\r\n\r\n      } else {\r\n         statsInfo.style.width = '0'\r\n         statsInfo.style.minWidth = '0'\r\n         this.classList.replace('open', 'close')\r\n      }\r\n\r\n\r\n   })\r\n\r\n   // QUITTE LE MODE RECHERCHE\r\n   document.querySelector('.back_to_liste').addEventListener(\"click\", function (e) {\r\n\r\n      if (this.classList.contains('show')) {\r\n\r\n         setupFileListing(initFileList(document.getElementById(\"folderPicker\").files).chatLog, false)\r\n         this.classList.remove('show')\r\n         document.querySelector('.table_container').classList.remove('resize')\r\n\r\n         const popupSearchFiles = document.getElementById('searchFiles')\r\n         popupSearchFiles.classList.replace('show', 'close')\r\n         popupSearchFiles.querySelector('#goSearch').textContent = \"Lancer la recherche\"\r\n         popupSearchFiles.querySelector('#goNewSearch').classList.add('disabled')\r\n\r\n      } else {\r\n         return false\r\n      }\r\n\r\n   })\r\n\r\n\r\n   // MASQUE LA LISTE DES FICHIERS\r\n   document.querySelector('.collapse').addEventListener(\"click\", function (e) {\r\n\r\n      const container = document.querySelector('.container')\r\n\r\n      if (!this.classList.contains('close')) {\r\n         this.classList.add('close')\r\n         container.classList.add('close')\r\n         this.innerHTML = '&rsaquo;'\r\n      } else {\r\n         this.classList.remove('close')\r\n         container.classList.remove('close')\r\n         this.innerHTML = '&lsaquo;'\r\n\r\n      }\r\n\r\n   })\r\n\r\n   // NAVIGATION PREV / NEXT\r\n   const navigBtns = document.querySelectorAll('.file_prev, .file_next')\r\n   for (let navigBtn of navigBtns) {\r\n\r\n      navigBtn.addEventListener(\"click\", function (e) {\r\n\r\n         let selectedLi = listingFilesUl.querySelector('.selected')\r\n         let allLi = listingFilesUl.querySelectorAll('li')\r\n         let indexToNavig = selectedLi.dataset.index\r\n\r\n         if (this.classList.contains('file_prev') && indexToNavig > 0) {\r\n            navigBtns[1].classList.remove('disabled')\r\n            indexToNavig--\r\n         } else if (this.classList.contains('file_next') && indexToNavig < allLi.length - 1) {\r\n            navigBtns[0].classList.remove('disabled')\r\n            indexToNavig++\r\n         }\r\n\r\n         if (+indexToNavig === 0 || +indexToNavig === allLi.length - 1)\r\n            this.classList.add('disabled')\r\n\r\n         if (+indexToNavig !== +selectedLi.dataset.index)\r\n            listingFilesUl.querySelector('li[data-index=\"' + indexToNavig + '\"]').click()\r\n\r\n      })\r\n   }\r\n\r\n   // --- RECHERCHER EVENTS -------------------------------------------------\r\n   const inputTermToSearch = document.getElementById('termToSearch')\r\n\r\n   inputTermToSearch.addEventListener(\"keyup\", function (e) {\r\n\r\n      let termToSearch = this.value\r\n      let verifSpaces = termToSearch.match(/^\\s+/g) // verif la présence d'espaces en début de ligne\r\n\r\n      if (termToSearch.length > 2 && !verifSpaces) {\r\n         this.classList.remove('invalid')\r\n      } else if (verifSpaces) {\r\n         this.classList.add('invalid')\r\n         this.value = ''\r\n      }\r\n\r\n   })\r\n\r\n   let checkByDate = document.getElementById('checkByDate')\r\n\r\n   let dateDeb, dateFin\r\n\r\n   verifCheckByDate(checkByDate.checked)\r\n\r\n   checkByDate.addEventListener(\"click\", function (e) {\r\n      verifCheckByDate(checkByDate.checked)\r\n   })\r\n\r\n   const dateChoosen = document.querySelectorAll('#searchFiles input[type=date]')\r\n\r\n   for (let inputDate of dateChoosen) {\r\n      inputDate.addEventListener(\"change\", function (e) {\r\n         if (dateChoosen[0].value !== '' && dateChoosen[1].value !== '' && dateChoosen[0].value > dateChoosen[1].value) {\r\n            dateChoosen[0].value = ''\r\n         } else {\r\n            dateDeb = dateChoosen[0].value\r\n            dateFin = dateChoosen[1].value\r\n         }\r\n      })\r\n   }\r\n\r\n\r\n   // AFFICHE / MASQUE LE POPUP DE RECHERCHE\r\n   const openSearch = document.querySelector('.menu_options .open_search span')\r\n   const popupSearch = document.getElementById('searchFiles')\r\n\r\n   openSearch.addEventListener(\"click\", function (e) {\r\n\r\n      if (popupSearch.classList.contains('close') || popupSearch.classList.length === 0) {\r\n         popupSearch.classList.remove('close')\r\n         popupSearch.classList.add('show')\r\n      } else {\r\n         popupSearch.classList.add('close')\r\n         popupSearch.classList.remove('show')\r\n      }\r\n   })\r\n\r\n   popupSearch.querySelector('.close_btn').addEventListener(\"click\", function (e) {\r\n      openSearch.click()\r\n   })\r\n\r\n   document.querySelector('.table_container').addEventListener(\"click\", function (e) {\r\n      e.stopImmediatePropagation()\r\n\r\n      let elem = e.target\r\n      elem = elem.closest('#searchFiles')\r\n\r\n      if ((elem === null || elem.id !== 'searchFiles') && popupSearch.classList.contains('show')) {\r\n         openSearch.click()\r\n      }\r\n   })\r\n\r\n   popupSearch.querySelector('.search_fail').addEventListener(\"click\", function () {\r\n      this.classList.remove('show')\r\n   })\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    LISTENERS DYNAMIQUES\r\n// ---------------------------------------------------------\r\nconst setDynamicsEvents = (listingFilesUl, fileListe) => {\r\n\r\n   // MASQUE LES COLONNES PSEUDO ET TYPE DEMESSAGE\r\n   const options = document.querySelectorAll('.input_group input[type=\"checkbox\"]')\r\n   const fileContent = document.querySelector('#fileContent tbody')\r\n\r\n   for (let thisOption of options) {\r\n\r\n      let columnsTargeted\r\n\r\n      thisOption.addEventListener(\"click\", function (e) {\r\n\r\n         if (thisOption.id === 'fileSort') {\r\n            sortFiles(thisOption.checked)\r\n         }\r\n\r\n         if (thisOption.id === 'colPseudo') {\r\n            columnsTargeted = fileContent.querySelectorAll('.pseudo')\r\n         }\r\n         if (thisOption.id === 'colDialogType') {\r\n            columnsTargeted = fileContent.querySelectorAll('.msgType')\r\n         }\r\n\r\n         if (thisOption.id === 'colPseudo' || thisOption.id === 'colDialogType') {\r\n            for (let thisCol of columnsTargeted) {\r\n               if (thisOption.checked) {\r\n                  thisCol.classList.add('hide')\r\n               } else {\r\n                  thisCol.classList.remove('hide')\r\n               }\r\n            }\r\n         }\r\n      })\r\n\r\n   }\r\n\r\n   // CLICK SUR UN FICHIER (LI) DE LA LISTE\r\n   const clickedLiListe = (e) => {\r\n\r\n      const thisLi = e.target\r\n      const liSelected = listingFilesUl.querySelector('li.selected')\r\n\r\n      if (liSelected) {\r\n         liSelected.classList.remove('selected')\r\n      }\r\n\r\n      thisLi.classList.add('selected')\r\n      updateNavig(thisLi, listeLi.length, document.querySelectorAll('.file_prev, .file_next, .file_name, .file_num'))\r\n      openFiles([fileListe[thisLi.dataset.index]], 'process')\r\n\r\n   }\r\n\r\n   const listeLi = listingFilesUl.querySelectorAll('li')\r\n   listeLi.forEach(thisLi => thisLi.onclick = clickedLiListe)\r\n\r\n   // LISTE DES FICHIERS CHARGÉS -> on rend actif les boutons de navigation et de recherche\r\n   document.querySelector('.menu_options .open_search').classList.remove('disabled')\r\n   document.querySelector('.menu_options li.navig').classList.remove('disabled')\r\n\r\n\r\n   //CLICK BOUTON RECHERCHER\r\n   const clickedBtnSearch = (e) => {\r\n\r\n      e.preventDefault()\r\n\r\n      const inputTermToSearch = document.getElementById('termToSearch')\r\n      let newFileListe\r\n\r\n      let termToSearch = inputTermToSearch.value.trim()\r\n\r\n      if (termToSearch.length > 2) {\r\n\r\n         inputTermToSearch.value = termToSearch\r\n\r\n         let searchOptions = {\r\n            'termTosearch': termToSearch,\r\n            'msgExcludeParty': document.getElementById('checkMsgExcludeParty').checked,\r\n            'msgExcludeShout': document.getElementById('checkMsgExcludeShout').checked,\r\n            'msgExcludeMp': document.getElementById('checkMsgExcludeMp').checked,\r\n            'wholeWord': document.getElementById('checkWholeWord').checked,\r\n            'checkCasse': document.getElementById('checkCaseSensitive').checked\r\n         }\r\n\r\n         let checkByDate = document.getElementById('checkByDate').checked\r\n\r\n         if (e.target.id === 'goNewSearch') {\r\n            newFileListe = document.getElementById(\"folderPicker\").files\r\n         }\r\n\r\n         if (checkByDate) {\r\n            newFileListe = updateListeFilesByDate(fileListe)\r\n            openFiles(newFileListe, 'search', searchOptions)\r\n         } else {\r\n            openFiles(fileListe, 'search', searchOptions)\r\n         }\r\n\r\n         document.querySelector('.back_to_liste').classList.add('show')\r\n\r\n      } else {\r\n         inputTermToSearch.classList.add('invalid')\r\n         if (/^fr\\b/.test(navigator.language)) {\r\n            alert('Le champ de recherche ne doit pas être vide')\r\n         } else {\r\n            alert('The search field must not be empty')\r\n         }\r\n      }\r\n   }\r\n\r\n   const searchBtns = document.querySelectorAll('#searchFiles .searchContainer button')\r\n   searchBtns.forEach(thisBtn => thisBtn.onclick = clickedBtnSearch)\r\n\r\n}\r\n//\r\n//    MàJ DES BOUTONS DE NAVIGATION\r\n//\r\nconst updateNavig = (itemLi, filesTotal, navigBtns) => {\r\n\r\n   const fileName = navigBtns[0]\r\n   const filePrev = navigBtns[1]\r\n   const fileNext = navigBtns[2]\r\n   const fileNum = navigBtns[3]\r\n\r\n   fileName.textContent = itemLi.querySelector(\"span:nth-child(2)\").textContent\r\n   fileNum.innerHTML = `<span>${+itemLi.dataset.index + 1}</span>/<span>${filesTotal}</span>`\r\n\r\n   if (+itemLi.dataset.index + 1 === 1) {\r\n\r\n      filePrev.classList.add('disabled')\r\n      fileNext.classList.remove('disabled')\r\n\r\n   } else if (+itemLi.dataset.index + 1 === filesTotal) {\r\n\r\n      filePrev.classList.remove('disabled')\r\n      fileNext.classList.add('disabled')\r\n\r\n   } else {\r\n\r\n      filePrev.classList.remove('disabled')\r\n      fileNext.classList.remove('disabled')\r\n\r\n   }\r\n\r\n}\r\n\r\n//\r\n//    CHANGE L'ORDRE D'AFFICHAGE DE LA LISTE DES FICHIERS\r\n//\r\nconst sortFiles = (toSort) => {\r\n\r\n   const fileListing = document.getElementById('listing')\r\n   const filePrev = document.querySelector('.file_prev')\r\n   const fileNext = document.querySelector('.file_next')\r\n\r\n   let fileSelected = fileListing.querySelector('li.selected')\r\n   let scrollPos = 'center'\r\n\r\n   if (fileSelected) {\r\n\r\n      if (toSort) {\r\n\r\n         fileListing.classList.add('reverse')\r\n\r\n         if (!fileSelected) {\r\n            fileSelected = fileListing.querySelector('li:last-child')\r\n            scrollPos = 'start'\r\n         }\r\n\r\n         filePrev.classList.remove('disabled')\r\n         fileNext.classList.add('disabled')\r\n\r\n      } else {\r\n\r\n         fileListing.classList.remove('reverse')\r\n\r\n         if (!fileSelected) {\r\n            fileSelected = fileListing.querySelector('li:first-child')\r\n            scrollPos = 'end'\r\n         }\r\n\r\n         filePrev.classList.add('disabled')\r\n         fileNext.classList.remove('disabled')\r\n\r\n      }\r\n\r\n      fileSelected.scrollIntoView({behavior: \"smooth\", block: scrollPos, inline: scrollPos})\r\n\r\n      fileSelected.click()\r\n   }\r\n}\r\n\r\n//\r\n//    VÉRIFIE LES COCHES DE DATES\r\n//\r\nconst verifCheckByDate = (checked) => {\r\n\r\n   const chooseDate = document.querySelector('.chooseDate')\r\n\r\n   if (checked) {\r\n      chooseDate.classList.remove('disabled')\r\n   } else {\r\n      chooseDate.classList.add('disabled')\r\n   }\r\n}\r\n\r\n\r\nconst updateListeFilesByDate = (fileListe) => {\r\n\r\n   let dateDeb = document.getElementById('dateDeb').value\r\n   let dateFin = document.getElementById('dateFin').value\r\n\r\n   let index = 0\r\n\r\n   while (index < fileListe.length) {\r\n\r\n      let thisFileName = fileListe[index].name.slice(0, -4)\r\n      let thisFileDate = thisFileName.slice(thisFileName.length - 10).toString()\r\n      let matchDate = thisFileDate.match(/([0-9]{4})\\D([0-9]{2})\\D([0-9]{2})$/g).toString() //.getTime()\r\n\r\n      if ((matchDate < dateDeb) || (matchDate > dateFin)) {\r\n         fileListe.splice(index, 1)\r\n         index--\r\n      }\r\n\r\n      index++\r\n\r\n   }\r\n   return fileListe\r\n}\r\n// ---------------------------------------------------------\r\n//    LISTENERS TABLEAUX DE RÉSULTATS\r\n// ---------------------------------------------------------\r\nconst tableResultListeners = () => {\r\n\r\n   const clickedLine = (e) => {\r\n      const fileContent = document.getElementById('fileContent')\r\n      let thisLine = e.target\r\n\r\n      if (thisLine.className !== 'index') {\r\n         thisLine = thisLine.closest('tr').querySelector('td.index')\r\n      }\r\n      let getLineValue = thisLine.dataset.index\r\n      let jumpToLine = fileContent.querySelector('td[data-index=\"' + getLineValue + '\"]')\r\n\r\n      document.querySelectorAll('table td.focus').forEach(focus => focus.classList.remove('focus'))\r\n\r\n      thisLine.classList.add('focus')\r\n      jumpToLine.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"})\r\n      jumpToLine.classList.add('focus')\r\n\r\n   }\r\n\r\n   const resultByLineTable = document.querySelectorAll('#resultByLine tr')\r\n\r\n   resultByLineTable.forEach(lineResult => lineResult.onclick = clickedLine)\r\n\r\n\r\n   // AJOUTE UN ROLLOVER SUR LES CELLUlES PjName POUR LES NOMS LONGS\r\n   const cellPjFullName = document.querySelectorAll('.pjName.btn')\r\n   const popupFullName = document.getElementById('popupFullName')\r\n\r\n   const mouseIn = (e) => {\r\n      const thisLine = e.target\r\n      popupFullName.classList.add('show')\r\n      popupFullName.innerText = thisLine.dataset.fullname\r\n      popupFullName.style.color = thisLine.style.color\r\n      popupFullName.style.top = thisLine.getBoundingClientRect().top + 'px'\r\n      popupFullName.style.left = `${thisLine.getBoundingClientRect().left - document.querySelector('.col_left').offsetWidth + thisLine.offsetWidth}px`\r\n   }\r\n   const mouseOut = (e) => {\r\n      popupFullName.classList.remove('show')\r\n   }\r\n\r\n   cellPjFullName.forEach(fullName => fullName.onmouseenter = mouseIn)\r\n   cellPjFullName.forEach(fullName => fullName.onmouseleave = mouseOut)\r\n\r\n\r\n   // Click sur la liste des participants\r\n   const statsInfoDetails = document.querySelectorAll('#statsInfo span.plus, #statsInfo span.moins')\r\n\r\n   statsInfoDetails.forEach(thisBtn => {\r\n\r\n      let loop = 0\r\n\r\n      if (thisBtn.classList.contains('plus')) {\r\n         let allLinesPj = document.querySelectorAll('#fileContent tr[data-numpj=\"' + thisBtn.closest('li').dataset.numpj + '\"]')\r\n         thisBtn.previousElementSibling.textContent = allLinesPj.length.toString()\r\n         thisBtn.previousElementSibling.dataset.maxSpeech = allLinesPj.length.toString()\r\n      }\r\n\r\n      thisBtn.onclick = function (e) {\r\n\r\n         const thisBtn = e.target\r\n         const thisPjNum = thisBtn.closest('li').dataset.numpj\r\n\r\n         let allLinesPj = document.querySelectorAll('#fileContent tr[data-numpj=\"' + thisPjNum + '\"]')\r\n         document.querySelectorAll('#fileContent td.index').forEach(line => line.classList.remove('focus'))\r\n\r\n         statsInfoDetails.forEach(btn => btn.classList.remove('end'))\r\n         let btnPlus = thisBtn.closest('li').querySelector('.plus')\r\n         let btnMoins = thisBtn.closest('li').querySelector('.moins')\r\n         let maxSpeech = thisBtn.closest('li').querySelector('.num-speech')\r\n\r\n         if (thisBtn.classList.contains('plus')) {\r\n\r\n            loop = thisBtn.dataset.currentIndex\r\n            loop++\r\n\r\n            if (loop === allLinesPj.length) {\r\n               thisBtn.classList.add('end')\r\n               loop = 0\r\n            }\r\n\r\n            thisBtn.dataset.currentIndex = loop\r\n            btnMoins.classList.remove('end')\r\n\r\n\r\n         } else if (thisBtn.classList.contains('moins')) {\r\n\r\n            loop = btnPlus.dataset.currentIndex\r\n            loop--\r\n\r\n            if (loop < 0) {\r\n               thisBtn.classList.add('end')\r\n               loop = allLinesPj.length - 1\r\n            }\r\n\r\n            btnPlus.dataset.currentIndex = loop\r\n            btnPlus.classList.remove('end')\r\n\r\n         }\r\n\r\n         maxSpeech.textContent = `${loop + 1}/${maxSpeech.dataset.maxSpeech}`\r\n\r\n         if (allLinesPj[loop]) {\r\n            allLinesPj[loop].scrollIntoView({behavior: \"smooth\", block: 'start', inline: 'start'})\r\n            allLinesPj[loop].querySelector('td.index').classList.add('focus')\r\n         }\r\n\r\n      }\r\n   })\r\n\r\n   const statsInfoDetailsLi = document.querySelectorAll('#statsInfo li > span:first-child')\r\n   statsInfoDetailsLi.forEach(lineLi => lineLi.onclick = function () {\r\n      lineLi.closest('li').querySelector('.plus').click()\r\n   })\r\n\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    REDIMENSIONNE VERTICALEMENT LES TABLEAUX DE RÉSULATS #RESULTBYLINE, #FILECONTENT\r\n// ---------------------------------------------------------\r\n\r\nconst resizeResult = () => {\r\n\r\n   const searchResult = document.querySelector('.search_result')\r\n   const fileContent = document.querySelector('.file_content')\r\n\r\n   const resize = (e) => {\r\n\r\n      let containerHeight = document.querySelector('.table_container').offsetHeight\r\n\r\n      let posPrct = ((e.y - 60) / containerHeight) * 100 // 60 -> table_container.top : 60px\r\n\r\n      searchResult.style.height = `calc(${posPrct}% - 7px)` //posPrct + \"%\"\r\n      fileContent.style.height = `calc(100% - ${posPrct}%)`//(100 - posPrct) + \"%\"\r\n      handle.style.top = `calc(${posPrct}% - 7px)`\r\n\r\n   }\r\n\r\n   const handle = document.querySelector('.handle')\r\n\r\n   handle.addEventListener(\"mousedown\", function (e) {\r\n      document.addEventListener(\"mousemove\", resize, false)\r\n   }, false)\r\n\r\n   document.addEventListener(\"mouseup\", function () {\r\n      document.removeEventListener(\"mousemove\", resize, false)\r\n   }, false)\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    OUVERTURE D'UN LOG\r\n// ---------------------------------------------------------\r\nconst openFiles = (allFiles, mode, searchOptions) => {\r\n\r\n   const body = document.body\r\n\r\n   let listeFiles\r\n\r\n   let fileindex = 1\r\n   let languesLines = []\r\n   let searchResult = []\r\n   let newFileListe = []\r\n   let allPos = []\r\n\r\n   if (mode === 'langues') {\r\n      listeFiles = allFiles.languesLog\r\n   } else {\r\n      listeFiles = allFiles\r\n   }\r\n\r\n   body.classList.add('wait')\r\n\r\n   for (let thisFile of listeFiles) {\r\n\r\n      // \"Promise\" sinon l'execution des fonctions démarrent avant la fin de la lecture de \"FileReader\"\r\n      let filePromise = new Promise(resolve => {\r\n         let fileReader = new FileReader()\r\n         fileReader.readAsText(thisFile)\r\n         fileReader.onloadend = () => resolve(fileReader.result)\r\n      })\r\n\r\n      // fileResult.push(filePromise)\r\n\r\n      Promise.all([filePromise]).then(fileContents => {\r\n\r\n         let matchLineSearch, thisLogFormatted, result\r\n\r\n         matchLineSearch = /([\\[][0-9]{2}:[0-9]{2}] .*?: \\[.*?\\] [^\\[]+)/g\r\n         thisLogFormatted = fileContents.join('').match(new RegExp(matchLineSearch))\r\n\r\n         switch (mode) {\r\n            case 'langues' : {\r\n\r\n               // matchLineSearch = /^([\\[][0-9]{2}:[0-9]{2}])\\s<color=.*?>\\s(.*?\\s)(\\(.*?\\)\\s)(.*?)<\\/color>$/gm\r\n               matchLineSearch = /^([\\[][0-9]{2}:[0-9]{2}])\\s<color=.*?>\\s?(.*?\\s):?(\\(.*?\\)\\s)?(.*?)<\\/color>$/gm\r\n               thisLogFormatted = fileContents.join('').match(new RegExp(matchLineSearch))\r\n\r\n               for (let index in thisLogFormatted) {\r\n                  let line = thisLogFormatted[index]\r\n                  let newLine\r\n                  newLine = line.replace(/<color=.*?>\\s?/g, '').replace(/<\\/color>/g, '')\r\n                  // thisLogFormatted[index] = newLine\r\n                  // thisLogFormatted[index] = /([\\[][0-9]{2}:[0-9]{2}])\\s(.*?)\\s(\\(.*?\\))\\s(.*?)$/g.exec(newLine)\r\n                  thisLogFormatted[index] = /^([\\[][0-9]{2}:[0-9]{2}])\\s(.*?)(\\(.*\\)|:)\\s(.*?)$$/g.exec(newLine)\r\n               }\r\n\r\n               if (thisLogFormatted !== null) {\r\n                  languesLines.push({file: thisFile.name, lines: thisLogFormatted})\r\n               }\r\n               if (fileindex === listeFiles.length) {\r\n                  document.getElementById('languesListeRef').value = JSON.stringify(languesLines)\r\n                  body.classList.remove('wait')\r\n\r\n                  setupFileListing(allFiles.chatLog, false)\r\n                  sortFiles(document.getElementById('fileSort').checked)\r\n                  document.querySelector('#statsInfo .icon').classList.add('close')\r\n                  //.style.right = '0'\r\n\r\n               }\r\n\r\n            }\r\n               break\r\n            case 'search' : {\r\n\r\n               result = searchInFile(thisFile.name, thisLogFormatted, searchOptions)\r\n\r\n               if (result.datas.length > 0) {\r\n                  searchResult.push({fileName: thisFile.name, datas: result.datas, allPos: result.numPos})\r\n                  newFileListe.push(thisFile)\r\n               }\r\n\r\n               if (fileindex === listeFiles.length) {\r\n\r\n                  if (searchResult.length > 0) {\r\n\r\n                     searchResult.sort((a, b) => {\r\n                        return a.fileName.localeCompare(b.fileName)\r\n                     })\r\n\r\n                     newFileListe.sort((a, b) => {\r\n                        return a.name.localeCompare(b.name)\r\n                     })\r\n\r\n                     searchResult.forEach(item => {\r\n                        allPos.push(item.allPos)\r\n                     })\r\n\r\n                     setupFileListing(newFileListe, true, allPos)\r\n\r\n                     document.getElementById('arrayRefSearch').value = JSON.stringify(searchResult)\r\n                     document.querySelector('.table_container').classList.add('resize')\r\n                     let liToSelect = document.querySelector('#listing li.selected')\r\n                     if (!liToSelect) {\r\n                        liToSelect = document.querySelector('#listing li:first-child')\r\n                     }\r\n                     liToSelect.click()\r\n\r\n                  } else {\r\n\r\n                     const searchFail = document.querySelector('#searchFiles .search_fail')\r\n                     let searchFailedMsg\r\n\r\n                     if (/^fr\\b/.test(navigator.language)) {\r\n                        searchFailedMsg = searchFail.dataset.fr\r\n                     } else {\r\n                        searchFailedMsg = searchFail.dataset.en\r\n                     }\r\n\r\n                     searchFailedMsg = searchFailedMsg.replace(/(\\[\\s%%%\\s\\])/g, `<strong>[ ${searchOptions.termTosearch} ]</strong>`)\r\n\r\n                     searchFail.innerHTML = `<span>${searchFailedMsg}</span>`\r\n                     searchFail.classList.add('show')\r\n                     body.classList.remove('wait')\r\n                  }\r\n               }\r\n            }\r\n               break\r\n            case 'process' : {\r\n\r\n               processLog(\r\n                   thisLogFormatted,\r\n                   thisFile.name,\r\n                   document.querySelector('.table_container').classList.contains('resize')\r\n               )\r\n\r\n               tableResultListeners()\r\n               body.classList.remove('wait')\r\n            }\r\n               break\r\n\r\n         }\r\n\r\n         fileindex++\r\n\r\n      })\r\n   }\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    RECHERCHE DU TERME\r\n// ---------------------------------------------------------\r\nconst searchInFile = (thisFileName, thisLog, searchOptions) => {\r\n\r\n   let stringToFind = searchOptions.termTosearch\r\n   let index = 0\r\n   let allPos = 0\r\n   let doSearch = false\r\n   let pos, founded, newMessage, regEx\r\n   let arrayResult = {datas: [], numPos: ''}\r\n\r\n   let languageInThisLog = JSON.parse(document.getElementById('languesListeRef').value)\r\n   let resultSearchLang = languageInThisLog.find(item => item.file === thisFileName.replace('Chatlog', 'Combatlog'))\r\n\r\n   let maj = searchOptions.checkCasse ? '' : 'i' // sensible à la casse ? oui : non / i : insensitive\r\n\r\n   if (searchOptions.wholeWord) {\r\n      // mot entier\r\n      regEx = new RegExp(\"(?<=^|[^a-zA-ZÀ-ÖØ-öø-ÿ])(\" + stringToFind + \")(?=[^a-zA-ZÀ-ÖØ-öø-ÿ]|$)\", \"g\" + maj)\r\n      // -> double anti-slash \\\\ pour une expression en string\r\n   } else {\r\n      // bout de mot\r\n      regEx = new RegExp(stringToFind, \"g\" + maj)\r\n   }\r\n\r\n   // CombatLog\r\n   if (resultSearchLang !== undefined) {\r\n\r\n      resultSearchLang.lines.forEach(line => {\r\n\r\n         line[4] = line[4].replace(/(<span class=\"highlight\">.*?<\\/span>)/g, \"$&\")\r\n\r\n         let matchWord\r\n         while ((matchWord = regEx.exec(line[4])) !== null) {\r\n            if (matchWord.index === regEx.lastIndex) {\r\n               regEx.lastIndex++\r\n            }\r\n            founded = true\r\n            allPos++\r\n         }\r\n\r\n         if (founded)\r\n            line[4] = line[4].replace(regEx, '<span class=\"highlight\">$&</span>')\r\n\r\n      })\r\n\r\n      languageInThisLog.splice(languageInThisLog.indexOf(resultSearchLang), 1, resultSearchLang)\r\n      document.getElementById('languesListeRef').value = JSON.stringify(languageInThisLog)\r\n\r\n   }\r\n\r\n\r\n   for (let thisLine of thisLog) {\r\n      // récupère le début de la ligne : heure / compte / pj / msg type / message\r\n      const search = /^[\\[][0-9]{2}:[0-9]{2}] \\[.*?\\].*?: (\\[.*?\\]) ([^\\[]+)/g\r\n      let whileMatch = search.exec(thisLine)\r\n\r\n      founded = false\r\n      pos = []\r\n      newMessage = []\r\n\r\n      if (whileMatch !== null) {\r\n\r\n         let messageType = whileMatch[1].slice(1, -1).toLowerCase().trim()\r\n         let message = whileMatch[2].replaceAll(/(\\r\\n|\\n|\\r)/gm, \"<br>\") // récup le message + remplace les sauts de ligne et retours chariot par '<br>'\r\n\r\n         if ((messageType === 'tell' && !searchOptions.msgExcludeMp) ||\r\n             (messageType === 'shout' && !searchOptions.msgExcludeShout) ||\r\n             (messageType === 'party' && !searchOptions.msgExcludeParty) ||\r\n             (messageType === 'talk' || messageType === 'whisper' || messageType === 'dialog')) {\r\n\r\n            // ChatLog\r\n            let matchWord\r\n            while ((matchWord = regEx.exec(message)) !== null) {\r\n               if (matchWord.index === regEx.lastIndex) {\r\n                  regEx.lastIndex++\r\n               }\r\n               founded = true\r\n               allPos++\r\n            }\r\n\r\n            if (founded) {\r\n               newMessage.push(message.replace(regEx, '<span class=\"highlight\">$&</span>'))\r\n            }\r\n\r\n         }\r\n\r\n      } else {\r\n         //console.log('SEARCH ERREUR')\r\n      }\r\n\r\n      if (founded) {\r\n         arrayResult.numPos = allPos\r\n         arrayResult.datas.push({\r\n            newMessage: newMessage,\r\n            numLigne: index,\r\n         })\r\n      }\r\n\r\n      index++\r\n\r\n   }\r\n\r\n   return arrayResult\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    MISE EN FORME DU LOG\r\n// ---------------------------------------------------------\r\n\r\n// const processLog = (thisLog, filename, word, resultByLine) => {\r\nconst processLog = (thisLog, filename, resultByLine) => {\r\n\r\n   const fileContentTable = document.querySelector('#fileContent tbody')\r\n   const resultByLineTable = document.querySelector('#resultByLine tbody')\r\n\r\n   // Recherche le nom du PJ dans le nom du fichier\r\n   let filePjName = (/^(.*)([_]|[ (])(Chatlog)/g).exec(filename)\r\n   filePjName = filePjName[1].trim().replaceAll('_', ' ')\r\n\r\n   // Assigne une couleur pour chaque pj/pnj\r\n   const listColors = lineColorByName(thisLog, filePjName)\r\n\r\n   let formattedContent = []\r\n   let formattedSearch = []\r\n   let refResult, getRef, indexLine = 0\r\n   let addRefLine\r\n   let formattedTraducByLine// = ''\r\n\r\n   let languageInThisLog = JSON.parse(document.getElementById('languesListeRef').value)\r\n   let getFileLangue = languageInThisLog.find(item => item.file === filename.replace('Chatlog', 'Combatlog'))\r\n\r\n   if (resultByLine) {\r\n      refResult = JSON.parse(document.getElementById('arrayRefSearch').value)\r\n      getRef = refResult.find(item => item.fileName === filename)\r\n   }\r\n\r\n   for (let thisLine of thisLog) {\r\n\r\n      // regex : [00:00] [pseudo] (optionnel) Nom du PJ : [Type de message] -> jusqu'à la fin de l'entrée\r\n      let search = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\]) ([^\\[]+)/g\r\n      let match = search.exec(thisLine)\r\n      let messageLang = '', message = ''\r\n\r\n      if (match !== null) {\r\n\r\n         let heure = match[1]\r\n         let pseudo = match[2] === undefined ? '(pnj ou dm)' : match[2]\r\n         let pjName = match[3].trim().slice(0, -1)\r\n         let msgType = match[4]\r\n         let msg = match[5].replaceAll(/(\\r\\n|\\n|\\r)/gm, \"<br>\")\r\n\r\n         // supprime les crochets + les espaces et passe tout en minuscule -> le type de message est utilisé en CSS.class\r\n         let msgClass = msgType.slice(1, -1).replaceAll(' ', '').toLowerCase()\r\n\r\n         // Masque / Affiche les colonnes pseudos\r\n         const hideColPseudo = document.getElementById('colPseudo').checked\r\n         let hideLinePseudo = hideColPseudo ? 'hide' : ''\r\n\r\n         // Masque / Affiche les colonnes type de message\r\n         const hideColDialogType = document.getElementById('colDialogType').checked\r\n         let hideLineMsgType = hideColDialogType ? 'hide' : ''\r\n\r\n         // Applique une couleur à chaque pj/pnj (si \"undefined\" -> message serveur -> gris par défaut)\r\n         // let lineColor = `hsl(${listColors.colors[listColors.names.indexOf(pjName)]}, 80%, 35%)`\r\n         let indexPjName = listColors.names.indexOf(pjName)\r\n         let lineColor = listColors.colors[indexPjName] === undefined ? '#b6c0ca' : listColors.colors[indexPjName]\r\n\r\n         // Recherche les émotes *...* et les mets en italique\r\n         let emotes = msg.split(/([*].*?[*])/g)\r\n\r\n         let formatMsg = ''\r\n         for (let emote of emotes) {\r\n            if (emote.includes('*')) {\r\n               formatMsg = formatMsg + `<span class=\"italic\">${emote}</span>`\r\n            } else if (emote !== '') {\r\n               formatMsg = formatMsg + emote\r\n            }\r\n            msg = formatMsg\r\n         }\r\n\r\n         // Tronque les noms de pj trop longs\r\n         let fullName, btn, maxChar = 23\r\n         fullName = pjName\r\n\r\n         if (pjName.length > maxChar) {\r\n            pjName = pjName.slice(0, maxChar) + '...'\r\n            btn = 'btn'\r\n         }\r\n\r\n         message = msg\r\n         let searchedLine = false\r\n         let searchedLineTraduc = false\r\n\r\n         // Ajoute les langues\r\n         let withTraduc = false\r\n         let getLangueLine\r\n         formattedTraducByLine = ''\r\n\r\n         if (getFileLangue !== undefined) {\r\n            getLangueLine = getFileLangue.lines.filter(line => line[1] === heure)\r\n            withTraduc = getLangueLine.length > 0\r\n         }\r\n\r\n         if (withTraduc) {\r\n\r\n            let thisItemLangue = getLangueLine[0]\r\n\r\n            if (thisItemLangue[2].trim() === fullName && (msgType !== '[Tell]' && msgType !== '[Party]')) {\r\n\r\n               formattedTraducByLine = `<span class=\"traduc\"><strong>${thisItemLangue[3]}</strong> ${thisItemLangue[4]}</span>`\r\n\r\n               let regHighLight = /(<span class=\"highlight\">.*?<\\/span>)/g\r\n               if (regHighLight.test(thisItemLangue[4])) {\r\n                  searchedLineTraduc = true\r\n               }\r\n\r\n               if (getFileLangue !== undefined) {\r\n                  getFileLangue.lines.shift()\r\n\r\n               }\r\n\r\n            }\r\n\r\n         }\r\n\r\n         // Met en surbrilance le mot recherché dans la colonne message, si rien, la ligne n'est pas modifiée\r\n         if (resultByLine && getRef !== undefined) {\r\n\r\n            addRefLine = getRef.datas.find(item => item.numLigne === indexLine)\r\n\r\n            if (addRefLine !== undefined && addRefLine.numLigne === indexLine) {\r\n               searchedLine = true\r\n               message = addRefLine.newMessage\r\n            }\r\n\r\n         }\r\n\r\n         message = message + formattedTraducByLine\r\n\r\n         // Ligne du tableau à ajouter\r\n         let formattedLine = `<tr data-numPj = ${indexPjName}>\r\n                                 <td class=\"index\" data-index=\"${indexLine + 1}\">${indexLine + 1}</td>\r\n                                 <td class=\"heure\">${heure}</td>\r\n                                 <td class=\"pseudo ${hideLinePseudo}\" style=\"color: ${lineColor}\">${pseudo}</td>\r\n                                 <td class=\"pjName ${btn}\" style=\"color: ${lineColor}\" data-fullName = \"${fullName}\">${pjName}</td>\r\n                                 <td class=\"${msgClass} msgType ${hideLineMsgType}\" title=\"${msgClass}\"><span>${msgType}</span></td>\r\n                                 <td class=\"${msgClass} message\" style=\"color: ${lineColor}\"><div>${message}</div></td>                                 \r\n                              </tr>`\r\n\r\n         formattedContent.push(formattedLine)\r\n\r\n         // si un mot a été trouvé on ajoute la ligne au tableau des résultats\r\n         if (searchedLine || searchedLineTraduc) {\r\n            formattedSearch.push(formattedLine)\r\n         }\r\n\r\n      }\r\n\r\n      indexLine++\r\n\r\n   }\r\n\r\n   // Si résultat de recherche -> on charge le tableau [resultByLineTable]\r\n   if (resultByLine) {\r\n      resultByLineTable.innerHTML = formattedSearch.join('')\r\n      resultByLineTable.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"start\"})\r\n\r\n      const popupSearchFiles = document.getElementById('searchFiles')\r\n      popupSearchFiles.classList.replace('show', 'close')\r\n\r\n      const btnGoSearch = popupSearchFiles.querySelector('#goSearch')\r\n      if (/^fr\\b/.test(navigator.language)) {\r\n         btnGoSearch.textContent = btnGoSearch.dataset.frNext\r\n      } else {\r\n         btnGoSearch.textContent = btnGoSearch.dataset.enNext\r\n      }\r\n      popupSearchFiles.querySelector('#goNewSearch').classList.remove('disabled')\r\n\r\n   }\r\n\r\n   // Liste tous les participants du log\r\n   const statsInfoDetails = document.querySelector('#statsInfo')\r\n   let liLineName = []\r\n\r\n   statsInfoDetails.querySelector('.pj_count > span > span').textContent = listColors.names.length.toString()\r\n\r\n   for (let index in listColors.names) {\r\n      liLineName.push(`<li data-numPj=\"${index}\" style=\"color: ${listColors.colors[index]}\">\r\n                        <span>${listColors.names[index]}</span>\r\n                        <div><span class=\"num-speech\"></span>\r\n                        <span class=\"plus\" data-current-index=\"-1\"></span>\r\n                        <span class=\"moins\"></span></div></li>`)\r\n   }\r\n   statsInfoDetails.querySelector('.details').innerHTML = `<ul>${liLineName.join('')}</ul>`\r\n\r\n\r\n   // Charge le array \"formattedContent\" dans le tableau <table/>\r\n   fileContentTable.innerHTML = formattedContent.join('')\r\n\r\n   // Remonte en haut de la page.\r\n   fileContentTable.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"start\"})\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    GENERATION DU TABLEAU DE COULEURS\r\n// ---------------------------------------------------------\r\n\r\nconst generateColors = () => {\r\n\r\n   return [\r\n      \"hsl(306,51%,52%)\",\r\n      \"hsl(93, 100%, 30.2%)\",\r\n      \"hsl(240, 67.5%, 59%)\",\r\n      \"hsl(50,100%,20%)\",\r\n      // \"hsl(40,100%,23%)\",\r\n      \"hsl(183, 87.6%, 25.3%)\",\r\n      \"hsl(258,97%,60%)\",\r\n      \"hsl(116,84%,26%)\",\r\n      // \"hsl(344,62%,43%)\",\r\n      \"hsl(46,55%,30%)\",\r\n      \"hsl(186, 90%, 33%)\",\r\n      \"hsl(22, 92.4%, 46.3%)\",\r\n      \"hsl(225, 94.4%, 37%)\",\r\n      // \"hsl(162, 30.8%, 47.1%)\",\r\n      \"hsl(9,87%,42%)\",\r\n      \"#0095ff\",\r\n      // \"hsl(188, 100%, 32%)\",\r\n      // \"hsl(98, 86.9%, 42%)\",\r\n      \"hsl(280, 90%, 43%)\",\r\n      \"hsl(23, 88.3%, 45%)\",\r\n      \"hsl(162,46%,28%)\",\r\n      \"hsl(14, 100%, 62.5%)\",\r\n      // \"hsl(14,85%,41%)\",\r\n   ]\r\n\r\n}\r\n\r\nconst lineColorByName = (unLog, filename) => {\r\n\r\n   const listeColors = generateColors()\r\n   let num = 1\r\n   let tblPjName = {names: [], colors: []}\r\n\r\n   for (let uneLigne of unLog) {\r\n\r\n      let search = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\])/g\r\n      let match = search.exec(uneLigne)\r\n      let thePjName\r\n\r\n      if (match !== null) {\r\n         thePjName = match[3].trim().slice(0, -1)\r\n\r\n         if (tblPjName.names.indexOf(thePjName) === -1 && thePjName !== '') {\r\n            // let num = tblPjName.names.length\r\n            tblPjName.names.push(thePjName)\r\n            if (thePjName === filename) {\r\n               tblPjName.colors.push(listeColors[0])\r\n            } else {\r\n               tblPjName.colors.push(listeColors[num])\r\n            }\r\n            num++\r\n            if (num > listeColors.length - 1) {\r\n               num = 1\r\n            }\r\n            // tblPjName.colors.push(getRandomInt(360) * (num + 1) % 360)\r\n         }\r\n      }\r\n   }\r\n\r\n   // let delta = Math.trunc(360 / +tblPjName.names.length)\r\n\r\n   // for (let i in tblPjName.names) {\r\n   //\r\n   //    // tblPjName.colors.push(i * 40)\r\n   //    tblPjName.colors.push((Math.floor(Math.random() * Math.floor(360 / +tblPjName.names.length)) * i) % 360)\r\n   //\r\n   // }\r\n\r\n   return tblPjName\r\n\r\n}\r\n\r\n// Attend que la page soit TOTALEMENT chargée\r\nif (document.readyState === \"complete\" || (document.readyState !== \"loading\" && !document.documentElement.doScroll)) {\r\n   domLoaded()\r\n} else {\r\n   document.addEventListener(\"DOMContentLoaded\", domLoaded)\r\n}\r\n\r\n","if (module.hot) {\r\n  module.hot.accept(function () {\r\n    window.location.reload()\r\n  })\r\n}\r\n\r\n\r\n// import './plugins'\r\n// import './vendor/modernizr'\r\nimport './global'\r\n\r\n\r\n\r\n\r\n\r\n"]}