{"version":3,"sources":["js/plugins.js","js/global.js","js/main.js"],"names":["length","method","noop","methods","console","window","domLoaded","navigatorLangFR","test","navigator","language","document","querySelectorAll","forEach","thisDom","textContent","dataset","fr","en","getElementById","value","addEventListener","event","warningInfo","querySelector","allFiles","initFileList","files","chatLog","combatLog","style","display","openFiles","setStaticsEvents","resizeResult","manageCopy","listFiles","logFilesDef","traducFilesDef","thisFile","isFolder","webkitRelativePath","match","isChatLog","name","isCombatLog","push","setupFileListing","fileListe","search","occurences","listingFilesUl","allFilesLi","index","oldSelection","innerHTML","fileIndexInfo","fileName","slice","toString","classSelected","founded","thisNewLi","join","gotToLiSelected","classList","add","scrollIntoView","behavior","block","inline","setDynamicsEvents","statsInfo","e","offsetWidth","width","minWidth","replace","contains","remove","popupSearchFiles","container","navigBtns","selectedLi","allLi","indexToNavig","click","termToSearch","verifSpaces","key","checkByDate","verifCheckByDate","checked","dateChoosen","openSearch","popupSearch","focus","stopImmediatePropagation","elem","target","closest","id","options","fileContent","thisOption","columnsTargeted","sortFiles","thisCol","clickedLiListe","thisLi","liSelected","updateNavig","listeLi","onclick","clickedBtnSearch","preventDefault","inputTermToSearch","newFileListe","trim","searchOptions","updateListeFilesByDate","alert","thisBtn","itemLi","filesTotal","filePrev","fileNext","fileNum","toSort","fileListing","fileSelected","scrollPos","chooseDate","dateDeb","dateFin","thisFileName","matchDate","splice","tableResultListeners","clickedLine","thisLine","className","getLineValue","jumpToLine","lineResult","cellPjFullName","popupFullName","mouseIn","innerText","fullname","color","top","getBoundingClientRect","left","mouseOut","fullName","onmouseenter","onmouseleave","statsInfoDetails","loop","allLinesPj","numpj","previousElementSibling","maxSpeech","thisPjNum","line","btn","btnPlus","btnMoins","currentIndex","lineLi","searchResult","resize","containerHeight","offsetHeight","posPrct","y","height","handle","removeEventListener","mode","body","listeFiles","fileindex","languesLines","allPos","performance","now","startTime","filePromise","Promise","resolve","fileReader","FileReader","onload","result","onprogress","data","lengthComputable","progress","loaded","total","readAsText","all","then","fileContents","matchLineSearch","thisLogFormatted","RegExp","newLine","exec","file","lines","JSON","stringify","searchInFile","datas","numPos","sort","a","b","localeCompare","item","liToSelect","searchFail","searchFailedMsg","termTosearch","processLog","thisLog","stringToFind","newMessage","regEx","message","messageType","arrayResult","languageInThisLog","parse","resultSearchLang","find","maj","checkCasse","wholeWord","undefined","matchWord","lastIndex","indexOf","whileMatch","toLowerCase","replaceAll","prevLine","matchLang","msgExcludeMp","msgExcludeShout","msgExcludeParty","numLigne","filename","resultByLine","fileContentTable","resultByLineTable","filePjName","listColors","refResult","getRef","addRefLine","formattedTraducByLine","getFileLangue","lineColorByName","formattedContent","formattedSearch","indexLine","refLangue","dmfiSeptiLangue","msg","heure","pseudo","pjName","msgType","prevLineMatch","msgClass","hideLinePseudo","hideLineMsgType","indexPjName","names","lineColor","colors","formatMsg","emotes","split","emote","includes","searchedLine","searchedLineTraduc","withTraduc","getLangueLine","filter","thisItemLangue","shift","trClass","formattedLine","btnGoSearch","frNext","enNext","liLineName","generateColors","unLog","listeColors","num","tblPjName","uneLigne","thePjName","copyText","range","getSelection","textToCopy","isCollapsed","outerHTML","ancestor","getRangeAt","commonAncestorContainer","allnodes","childNodes","startSelection","startContainer","parentNode","endSelection","endContainer","selectedNodes","startIndex","endIndex","i","thisNode","arrayTemp","lineHide","lineIndex","clipboard","writeText","log","catch","readyState","documentElement","doScroll","module","hot","accept","location","reload"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["// Avoid `console` errors in browsers that lack a console.\n(function() {\n  var method;\n  var noop = function () {};\n  var methods = [\n    'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n    'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n    'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n    'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\n  ];\n  var length = methods.length;\n  var console = (window.console = window.console || {});\n\n  while (length--) {\n    method = methods[length];\n\n    // Only stub undefined methods.\n    if (!console[method]) {\n      console[method] = noop;\n    }\n  }\n\n}());\n\n// Place any jQuery/helper plugins in here.\n","const domLoaded = function () {\r\n\r\n   // Détection de la langue\r\n   let navigatorLangFR = /^fr\\b/.test(navigator.language)\r\n   const domToTranslate = document.querySelectorAll(\"[data-fr]\")\r\n\r\n   domToTranslate.forEach(thisDom => {\r\n      if (navigatorLangFR) {\r\n         thisDom.textContent = thisDom.dataset.fr\r\n      } else {\r\n         thisDom.textContent = thisDom.dataset.en\r\n      }\r\n   })\r\n\r\n   document.getElementById('arrayRefSearch').value = ''\r\n   document.getElementById('languesListeRef').value = ''\r\n\r\n   const folderPicker = document.getElementById(\"folderPicker\")\r\n   folderPicker.addEventListener(\"change\", function (event) {\r\n\r\n      const warningInfo = document.querySelector('.warning_info')\r\n      let allFiles = initFileList(this.files)\r\n      let chatLog = allFiles.chatLog\r\n      let combatLog = allFiles.combatLog\r\n\r\n      warningInfo.style.display = 'none'\r\n\r\n      if (chatLog.length > 0 && combatLog.length > 0) {\r\n\r\n         openFiles(allFiles, 'langues', '')\r\n\r\n      } else if (chatLog.length > 0 && combatLog.length === 0) {\r\n\r\n         openFiles(chatLog, 'process', '')\r\n\r\n      } else {\r\n         warningInfo.style.display = 'flex'\r\n      }\r\n   })\r\n\r\n   setStaticsEvents(document.getElementById('listing'))\r\n   resizeResult()\r\n\r\n   manageCopy()\r\n\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n//    INITIALISATION DE LA LISTE DES FICHIERS\r\n// ---------------------------------------------------------\r\nconst initFileList = (listFiles) => {\r\n\r\n   let logFilesDef = []\r\n   let traducFilesDef = []\r\n\r\n   for (let thisFile of listFiles) {\r\n\r\n      let isFolder = thisFile.webkitRelativePath.match(/[/]/g).length !== 1\r\n      let isChatLog = thisFile.name.match('Chatlog')\r\n      let isCombatLog = thisFile.name.match('Combatlog')\r\n\r\n      if (!isFolder) {\r\n         if (isChatLog)\r\n            logFilesDef.push(thisFile)\r\n         if (isCombatLog) {\r\n            traducFilesDef.push(thisFile)\r\n         }\r\n      }\r\n\r\n   }\r\n\r\n   return {chatLog: logFilesDef, combatLog: traducFilesDef}\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    CHARGEMENT DE LA LISTE DES FICHIERS DANS UL#LISTING\r\n// ---------------------------------------------------------\r\nconst setupFileListing = (fileListe, search, occurences) => {\r\n\r\n   const listingFilesUl = document.getElementById('listing')\r\n   const regexName = /(.*?)(?=\\(|_(Chatlog.*?)$)/g\r\n   let allFilesLi = []\r\n   let index = 0\r\n\r\n   let oldSelection = listingFilesUl.querySelector('.selected')\r\n   if (oldSelection !== null)\r\n      oldSelection = oldSelection.querySelector('span:nth-child(2)').textContent\r\n   else\r\n      oldSelection = ''\r\n\r\n   listingFilesUl.innerHTML = ''\r\n\r\n   for (let thisFile of fileListe) {\r\n\r\n      let fileName = thisFile.name.slice(0, -4)\r\n      let fileIndexInfo = (index + 1).toString()\r\n\r\n      while (fileIndexInfo.length <= (fileListe.length).toString().length) {\r\n         fileIndexInfo = `0${fileIndexInfo}`\r\n      }\r\n\r\n      let classSelected = ''\r\n\r\n      if (oldSelection === fileName || (oldSelection === '' && index === 0)) {\r\n         classSelected = 'selected'\r\n      }\r\n\r\n      let founded = search ? `<span class=\"founded\">${occurences[index]}</span>` : ''\r\n\r\n      let thisNewLi = `<li class=\"${classSelected}\" data-index=\"${index}\" ><span>${fileIndexInfo}</span><span>${fileName}</span>${founded}</li>`\r\n\r\n      allFilesLi.push(thisNewLi)\r\n      index++\r\n   }\r\n\r\n   listingFilesUl.innerHTML = allFilesLi.join('')\r\n\r\n   let gotToLiSelected = listingFilesUl.querySelector('.selected')\r\n   if (!gotToLiSelected) {\r\n      gotToLiSelected = listingFilesUl.querySelector('li:first-child')\r\n      gotToLiSelected.classList.add('selected')\r\n   }\r\n   gotToLiSelected.scrollIntoView({behavior: \"smooth\", block: 'start', inline: 'start'})\r\n\r\n   setDynamicsEvents(listingFilesUl, fileListe)\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    LISTENERS STATIQUES\r\n// ---------------------------------------------------------\r\nconst setStaticsEvents = (listingFilesUl) => {\r\n\r\n   // AFFICHE LES INFOS DU LOG\r\n   const statsInfo = document.getElementById('statsInfo')\r\n\r\n   statsInfo.querySelector('.icon').addEventListener(\"click\", function (e) {\r\n\r\n      if (statsInfo.offsetWidth === 0) {\r\n\r\n         statsInfo.style.width = '260px'//blocDetails.offsetWidth + 16 +14\r\n         statsInfo.style.minWidth = '260px'//blocDetails.offsetWidth + 16 +14\r\n         this.classList.replace('close', 'open')\r\n\r\n      } else {\r\n         statsInfo.style.width = '0'\r\n         statsInfo.style.minWidth = '0'\r\n         this.classList.replace('open', 'close')\r\n      }\r\n\r\n\r\n   })\r\n\r\n   // QUITTE LE MODE RECHERCHE\r\n   document.querySelector('.back_to_liste').addEventListener(\"click\", function (e) {\r\n\r\n      if (this.classList.contains('show')) {\r\n\r\n         setupFileListing(initFileList(document.getElementById(\"folderPicker\").files).chatLog, false)\r\n         this.classList.remove('show')\r\n         document.querySelector('.table_container').classList.remove('resize')\r\n\r\n         const popupSearchFiles = document.getElementById('searchFiles')\r\n         popupSearchFiles.classList.replace('show', 'close')\r\n         popupSearchFiles.querySelector('#goSearch').textContent = \"Lancer la recherche\"\r\n         popupSearchFiles.querySelector('#goNewSearch').classList.add('disabled')\r\n\r\n      } else {\r\n         return false\r\n      }\r\n\r\n   })\r\n\r\n\r\n   // MASQUE LA LISTE DES FICHIERS\r\n   document.querySelector('.collapse').addEventListener(\"click\", function (e) {\r\n\r\n      const container = document.querySelector('.container')\r\n\r\n      if (!this.classList.contains('close')) {\r\n         this.classList.add('close')\r\n         container.classList.add('close')\r\n         this.innerHTML = '&rsaquo;'\r\n      } else {\r\n         this.classList.remove('close')\r\n         container.classList.remove('close')\r\n         this.innerHTML = '&lsaquo;'\r\n\r\n      }\r\n\r\n   })\r\n\r\n   // NAVIGATION PREV / NEXT\r\n   const navigBtns = document.querySelectorAll('.file_prev, .file_next')\r\n   for (let navigBtn of navigBtns) {\r\n\r\n      navigBtn.addEventListener(\"click\", function (e) {\r\n\r\n         let selectedLi = listingFilesUl.querySelector('.selected')\r\n         let allLi = listingFilesUl.querySelectorAll('li')\r\n         let indexToNavig = selectedLi.dataset.index\r\n\r\n         if (this.classList.contains('file_prev') && indexToNavig > 0) {\r\n            navigBtns[1].classList.remove('disabled')\r\n            indexToNavig--\r\n         } else if (this.classList.contains('file_next') && indexToNavig < allLi.length - 1) {\r\n            navigBtns[0].classList.remove('disabled')\r\n            indexToNavig++\r\n         }\r\n\r\n         if (+indexToNavig === 0 || +indexToNavig === allLi.length - 1)\r\n            this.classList.add('disabled')\r\n\r\n         if (+indexToNavig !== +selectedLi.dataset.index)\r\n            listingFilesUl.querySelector('li[data-index=\"' + indexToNavig + '\"]').click()\r\n\r\n      })\r\n   }\r\n\r\n   // --- RECHERCHER EVENTS -------------------------------------------------\r\n   const inputTermToSearch = document.getElementById('termToSearch')\r\n\r\n   inputTermToSearch.addEventListener(\"keyup\", function (e) {\r\n\r\n      let termToSearch = this.value\r\n      let verifSpaces = termToSearch.match(/^\\s+/g) // verif la présence d'espaces en début de ligne\r\n\r\n      if (termToSearch.length > 2 && !verifSpaces) {\r\n         this.classList.remove('invalid')\r\n         if (e.key === 'Enter') {\r\n            document.getElementById('goSearch').click()\r\n         }\r\n      } else if (verifSpaces) {\r\n         this.classList.add('invalid')\r\n         this.value = ''\r\n      }\r\n\r\n\r\n   })\r\n\r\n   let checkByDate = document.getElementById('checkByDate')\r\n\r\n   let dateDeb, dateFin\r\n\r\n   verifCheckByDate(checkByDate.checked)\r\n\r\n   checkByDate.addEventListener(\"click\", function (e) {\r\n      verifCheckByDate(checkByDate.checked)\r\n   })\r\n\r\n   const dateChoosen = document.querySelectorAll('#searchFiles input[type=date]')\r\n\r\n   for (let inputDate of dateChoosen) {\r\n      inputDate.addEventListener(\"change\", function (e) {\r\n         if (dateChoosen[0].value !== '' && dateChoosen[1].value !== '' && dateChoosen[0].value > dateChoosen[1].value) {\r\n            dateChoosen[0].value = ''\r\n         } else {\r\n            dateDeb = dateChoosen[0].value\r\n            dateFin = dateChoosen[1].value\r\n         }\r\n      })\r\n   }\r\n\r\n\r\n   // AFFICHE / MASQUE LE POPUP DE RECHERCHE\r\n   const openSearch = document.querySelector('.menu_options .open_search span')\r\n   const popupSearch = document.getElementById('searchFiles')\r\n\r\n   openSearch.addEventListener(\"click\", function (e) {\r\n\r\n      if (popupSearch.classList.contains('close') || popupSearch.classList.length === 0) {\r\n         popupSearch.classList.remove('close')\r\n         popupSearch.classList.add('show')\r\n         popupSearch.querySelector('#goSearch').focus()\r\n\r\n      } else {\r\n         popupSearch.classList.add('close')\r\n         popupSearch.classList.remove('show')\r\n      }\r\n   })\r\n\r\n   popupSearch.querySelector('.close_btn').addEventListener(\"click\", function (e) {\r\n      openSearch.click()\r\n   })\r\n\r\n   document.querySelector('.table_container').addEventListener(\"click\", function (e) {\r\n      e.stopImmediatePropagation()\r\n\r\n      let elem = e.target\r\n      elem = elem.closest('#searchFiles')\r\n\r\n      if ((elem === null || elem.id !== 'searchFiles') && popupSearch.classList.contains('show')) {\r\n         openSearch.click()\r\n      }\r\n   })\r\n\r\n   popupSearch.querySelector('.search_fail').addEventListener(\"click\", function () {\r\n      this.classList.remove('show')\r\n   })\r\n\r\n}\r\n// ---------------------------------------------------------\r\n//    LISTENERS DYNAMIQUES\r\n// ---------------------------------------------------------\r\nconst setDynamicsEvents = (listingFilesUl, fileListe) => {\r\n\r\n   // MASQUE LES COLONNES PSEUDO ET TYPE DEMESSAGE\r\n   const options = document.querySelectorAll('.input_group input[type=\"checkbox\"]')\r\n   const fileContent = document.querySelector('#fileContent tbody')\r\n\r\n   for (let thisOption of options) {\r\n\r\n      let columnsTargeted\r\n\r\n      thisOption.addEventListener(\"click\", function (e) {\r\n\r\n         if (thisOption.id === 'fileSort') {\r\n            sortFiles(thisOption.checked)\r\n         }\r\n\r\n         if (thisOption.id === 'colPseudo') {\r\n            columnsTargeted = fileContent.querySelectorAll('.pseudo')\r\n         }\r\n         if (thisOption.id === 'colDialogType') {\r\n            columnsTargeted = fileContent.querySelectorAll('.msgType')\r\n         }\r\n\r\n         if (thisOption.id === 'colPseudo' || thisOption.id === 'colDialogType') {\r\n            for (let thisCol of columnsTargeted) {\r\n               if (thisOption.checked) {\r\n                  thisCol.classList.add('hide')\r\n               } else {\r\n                  thisCol.classList.remove('hide')\r\n               }\r\n            }\r\n         }\r\n      })\r\n\r\n   }\r\n\r\n   // CLICK SUR UN FICHIER (LI) DE LA LISTE\r\n   const clickedLiListe = (e) => {\r\n\r\n      const thisLi = e.target\r\n      const liSelected = listingFilesUl.querySelector('li.selected')\r\n\r\n      if (liSelected) {\r\n         liSelected.classList.remove('selected')\r\n      }\r\n\r\n      thisLi.classList.add('selected')\r\n      updateNavig(thisLi, listeLi.length, document.querySelectorAll('.file_prev, .file_next, .file_name, .file_num'))\r\n      openFiles([fileListe[thisLi.dataset.index]], 'process')\r\n\r\n   }\r\n\r\n   const listeLi = listingFilesUl.querySelectorAll('li')\r\n   listeLi.forEach(thisLi => thisLi.onclick = clickedLiListe)\r\n\r\n   // LISTE DES FICHIERS CHARGÉS -> on rend actif les boutons de navigation et de recherche\r\n   document.querySelector('.menu_options .open_search').classList.remove('disabled')\r\n   document.querySelector('.menu_options li.navig').classList.remove('disabled')\r\n\r\n\r\n   //CLICK BOUTON RECHERCHER\r\n   const clickedBtnSearch = (e) => {\r\n\r\n      e.preventDefault()\r\n\r\n      const inputTermToSearch = document.getElementById('termToSearch')\r\n      let newFileListe\r\n\r\n      let termToSearch = inputTermToSearch.value.trim()\r\n\r\n      if (termToSearch.length > 2) {\r\n\r\n         inputTermToSearch.value = termToSearch\r\n\r\n         let searchOptions = {\r\n            'termTosearch': termToSearch,\r\n            'msgExcludeParty': document.getElementById('checkMsgExcludeParty').checked,\r\n            'msgExcludeShout': document.getElementById('checkMsgExcludeShout').checked,\r\n            'msgExcludeMp': document.getElementById('checkMsgExcludeMp').checked,\r\n            'wholeWord': document.getElementById('checkWholeWord').checked,\r\n            'checkCasse': document.getElementById('checkCaseSensitive').checked\r\n         }\r\n\r\n         let checkByDate = document.getElementById('checkByDate').checked\r\n\r\n         if (e.target.id === 'goNewSearch') {\r\n            newFileListe = document.getElementById(\"folderPicker\").files\r\n         }\r\n\r\n         if (checkByDate) {\r\n            newFileListe = updateListeFilesByDate(fileListe)\r\n            openFiles(newFileListe, 'search', searchOptions)\r\n         } else {\r\n            openFiles(fileListe, 'search', searchOptions)\r\n         }\r\n\r\n         document.querySelector('.back_to_liste').classList.add('show')\r\n\r\n      } else {\r\n         inputTermToSearch.classList.add('invalid')\r\n         if (/^fr\\b/.test(navigator.language)) {\r\n            alert('Le champ de recherche ne doit pas être vide')\r\n         } else {\r\n            alert('The search field must not be empty')\r\n         }\r\n      }\r\n   }\r\n\r\n   const searchBtns = document.querySelectorAll('#searchFiles .searchContainer button')\r\n   searchBtns.forEach(thisBtn => thisBtn.onclick = clickedBtnSearch)\r\n\r\n}\r\n//\r\n//    MàJ DES BOUTONS DE NAVIGATION\r\n//\r\nconst updateNavig = (itemLi, filesTotal, navigBtns) => {\r\n\r\n   const fileName = navigBtns[0]\r\n   const filePrev = navigBtns[1]\r\n   const fileNext = navigBtns[2]\r\n   const fileNum = navigBtns[3]\r\n\r\n   fileName.textContent = itemLi.querySelector(\"span:nth-child(2)\").textContent\r\n   fileNum.innerHTML = `<span>${+itemLi.dataset.index + 1}</span>/<span>${filesTotal}</span>`\r\n\r\n   if (+itemLi.dataset.index + 1 === 1) {\r\n\r\n      filePrev.classList.add('disabled')\r\n      fileNext.classList.remove('disabled')\r\n\r\n   } else if (+itemLi.dataset.index + 1 === filesTotal) {\r\n\r\n      filePrev.classList.remove('disabled')\r\n      fileNext.classList.add('disabled')\r\n\r\n   } else {\r\n\r\n      filePrev.classList.remove('disabled')\r\n      fileNext.classList.remove('disabled')\r\n\r\n   }\r\n\r\n}\r\n\r\n//\r\n//    CHANGE L'ORDRE D'AFFICHAGE DE LA LISTE DES FICHIERS\r\n//\r\nconst sortFiles = (toSort) => {\r\n\r\n   const fileListing = document.getElementById('listing')\r\n   const filePrev = document.querySelector('.file_prev')\r\n   const fileNext = document.querySelector('.file_next')\r\n\r\n   let fileSelected = fileListing.querySelector('li.selected')\r\n   let scrollPos = 'center'\r\n\r\n   if (fileSelected) {\r\n\r\n      if (toSort) {\r\n\r\n         fileListing.classList.add('reverse')\r\n\r\n         if (!fileSelected) {\r\n            fileSelected = fileListing.querySelector('li:last-child')\r\n            scrollPos = 'start'\r\n         }\r\n\r\n         filePrev.classList.remove('disabled')\r\n         fileNext.classList.add('disabled')\r\n\r\n      } else {\r\n\r\n         fileListing.classList.remove('reverse')\r\n\r\n         if (!fileSelected) {\r\n            fileSelected = fileListing.querySelector('li:first-child')\r\n            scrollPos = 'end'\r\n         }\r\n\r\n         filePrev.classList.add('disabled')\r\n         fileNext.classList.remove('disabled')\r\n\r\n      }\r\n\r\n      fileSelected.scrollIntoView({behavior: \"smooth\", block: scrollPos, inline: scrollPos})\r\n\r\n      fileSelected.click()\r\n   }\r\n}\r\n\r\n//\r\n//    VÉRIFIE LES COCHES DE DATES\r\n//\r\nconst verifCheckByDate = (checked) => {\r\n\r\n   const chooseDate = document.querySelector('.chooseDate')\r\n\r\n   if (checked) {\r\n      chooseDate.classList.remove('disabled')\r\n   } else {\r\n      chooseDate.classList.add('disabled')\r\n   }\r\n}\r\n\r\n\r\nconst updateListeFilesByDate = (fileListe) => {\r\n\r\n   let dateDeb = document.getElementById('dateDeb').value\r\n   let dateFin = document.getElementById('dateFin').value\r\n\r\n   let index = 0\r\n\r\n   while (index < fileListe.length) {\r\n\r\n      let thisFileName = fileListe[index].name.slice(0, -4)\r\n      let thisFileDate = thisFileName.slice(thisFileName.length - 10).toString()\r\n      let matchDate = thisFileDate.match(/([0-9]{4})\\D([0-9]{2})\\D([0-9]{2})$/g).toString() //.getTime()\r\n\r\n      if ((matchDate < dateDeb) || (matchDate > dateFin)) {\r\n         fileListe.splice(index, 1)\r\n         index--\r\n      }\r\n\r\n      index++\r\n\r\n   }\r\n   return fileListe\r\n}\r\n// ---------------------------------------------------------\r\n//    LISTENERS TABLEAUX DE RÉSULTATS\r\n// ---------------------------------------------------------\r\nconst tableResultListeners = () => {\r\n\r\n   const clickedLine = (e) => {\r\n      const fileContent = document.getElementById('fileContent')\r\n      let thisLine = e.target\r\n\r\n      if (thisLine.className !== 'index') {\r\n         thisLine = thisLine.closest('tr').querySelector('td.index')\r\n      }\r\n      let getLineValue = thisLine.dataset.index\r\n      let jumpToLine = fileContent.querySelector('td[data-index=\"' + getLineValue + '\"]')\r\n\r\n      document.querySelectorAll('table td.focus').forEach(focus => focus.classList.remove('focus'))\r\n\r\n      thisLine.classList.add('focus')\r\n      jumpToLine.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"})\r\n      jumpToLine.classList.add('focus')\r\n\r\n   }\r\n\r\n   const resultByLineTable = document.querySelectorAll('#resultByLine tr')\r\n\r\n   resultByLineTable.forEach(lineResult => lineResult.onclick = clickedLine)\r\n\r\n\r\n   // AJOUTE UN ROLLOVER SUR LES CELLUlES PjName POUR LES NOMS LONGS\r\n   const cellPjFullName = document.querySelectorAll('.pjName.btn')\r\n   const popupFullName = document.getElementById('popupFullName')\r\n\r\n   const mouseIn = (e) => {\r\n      const thisLine = e.target\r\n      popupFullName.classList.add('show')\r\n      popupFullName.innerText = thisLine.dataset.fullname\r\n      popupFullName.style.color = thisLine.style.color\r\n      popupFullName.style.top = thisLine.getBoundingClientRect().top + 'px'\r\n      popupFullName.style.left = `${thisLine.getBoundingClientRect().left - document.querySelector('.col_left').offsetWidth + thisLine.offsetWidth}px`\r\n   }\r\n   const mouseOut = (e) => {\r\n      popupFullName.classList.remove('show')\r\n   }\r\n\r\n   cellPjFullName.forEach(fullName => fullName.onmouseenter = mouseIn)\r\n   cellPjFullName.forEach(fullName => fullName.onmouseleave = mouseOut)\r\n\r\n\r\n   // Click sur la liste des participants\r\n   const statsInfoDetails = document.querySelectorAll('#statsInfo span.plus, #statsInfo span.moins')\r\n\r\n   statsInfoDetails.forEach(thisBtn => {\r\n\r\n      let loop = 0\r\n\r\n      if (thisBtn.classList.contains('plus')) {\r\n         let allLinesPj = document.querySelectorAll('#fileContent tr[data-numpj=\"' + thisBtn.closest('li').dataset.numpj + '\"]')\r\n         thisBtn.previousElementSibling.textContent = allLinesPj.length.toString()\r\n         thisBtn.previousElementSibling.dataset.maxSpeech = allLinesPj.length.toString()\r\n      }\r\n\r\n      thisBtn.onclick = function (e) {\r\n\r\n         const thisBtn = e.target\r\n         const thisPjNum = thisBtn.closest('li').dataset.numpj\r\n\r\n         let allLinesPj = document.querySelectorAll('#fileContent tr[data-numpj=\"' + thisPjNum + '\"]')\r\n         document.querySelectorAll('#fileContent td.index').forEach(line => line.classList.remove('focus'))\r\n\r\n         statsInfoDetails.forEach(btn => btn.classList.remove('end'))\r\n         let btnPlus = thisBtn.closest('li').querySelector('.plus')\r\n         let btnMoins = thisBtn.closest('li').querySelector('.moins')\r\n         let maxSpeech = thisBtn.closest('li').querySelector('.num-speech')\r\n\r\n         if (thisBtn.classList.contains('plus')) {\r\n\r\n            loop = thisBtn.dataset.currentIndex\r\n            loop++\r\n\r\n            if (loop === allLinesPj.length) {\r\n               thisBtn.classList.add('end')\r\n               loop = 0\r\n            }\r\n\r\n            thisBtn.dataset.currentIndex = loop\r\n            btnMoins.classList.remove('end')\r\n\r\n\r\n         } else if (thisBtn.classList.contains('moins')) {\r\n\r\n            loop = btnPlus.dataset.currentIndex\r\n            loop--\r\n\r\n            if (loop < 0) {\r\n               thisBtn.classList.add('end')\r\n               loop = allLinesPj.length - 1\r\n            }\r\n\r\n            btnPlus.dataset.currentIndex = loop\r\n            btnPlus.classList.remove('end')\r\n\r\n         }\r\n\r\n         maxSpeech.textContent = `${loop + 1}/${maxSpeech.dataset.maxSpeech}`\r\n\r\n         if (allLinesPj[loop]) {\r\n            allLinesPj[loop].scrollIntoView({behavior: \"smooth\", block: 'start', inline: 'start'})\r\n            allLinesPj[loop].querySelector('td.index').classList.add('focus')\r\n         }\r\n\r\n      }\r\n   })\r\n\r\n   const statsInfoDetailsLi = document.querySelectorAll('#statsInfo li > span:first-child')\r\n   statsInfoDetailsLi.forEach(lineLi => lineLi.onclick = function () {\r\n      lineLi.closest('li').querySelector('.plus').click()\r\n   })\r\n\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    REDIMENSIONNE VERTICALEMENT LES TABLEAUX DE RÉSULATS #RESULTBYLINE, #FILECONTENT\r\n// ---------------------------------------------------------\r\n\r\nconst resizeResult = () => {\r\n\r\n   const searchResult = document.querySelector('.search_result')\r\n   const fileContent = document.querySelector('.file_content')\r\n\r\n   const resize = (e) => {\r\n\r\n      let containerHeight = document.querySelector('.table_container').offsetHeight\r\n\r\n      let posPrct = ((e.y - 60) / containerHeight) * 100 // 60 -> table_container.top : 60px\r\n\r\n      searchResult.style.height = `calc(${posPrct}% - 7px)` //posPrct + \"%\"\r\n      fileContent.style.height = `calc(100% - ${posPrct}%)`//(100 - posPrct) + \"%\"\r\n      handle.style.top = `calc(${posPrct}% - 7px)`\r\n\r\n   }\r\n\r\n   const handle = document.querySelector('.handle')\r\n\r\n   handle.addEventListener(\"mousedown\", function (e) {\r\n      document.addEventListener(\"mousemove\", resize, false)\r\n   }, false)\r\n\r\n   document.addEventListener(\"mouseup\", function () {\r\n      document.removeEventListener(\"mousemove\", resize, false)\r\n   }, false)\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    OUVERTURE D'UN LOG\r\n// ---------------------------------------------------------\r\nconst openFiles = (allFiles, mode, searchOptions) => {\r\n\r\n   const body = document.body\r\n\r\n   let listeFiles = allFiles\r\n\r\n   let fileindex = 1\r\n   let languesLines = []\r\n   let searchResult = []\r\n   let newFileListe = []\r\n   let allPos = []\r\n\r\n   if (mode === 'langues') {\r\n      listeFiles = allFiles.combatLog\r\n   }\r\n\r\n   body.classList.add('wait')\r\n   const startTime = performance.now()\r\n   let durationSearch = 0\r\n   let durationLang = 0\r\n   let durationProcess = 0\r\n\r\n   // console.warn(listeFiles.length)\r\n\r\n   for (let thisFile of listeFiles) {\r\n\r\n      // \"Promise\" sinon l'execution des fonctions démarrent avant la fin de la lecture de \"FileReader\"\r\n      let filePromise = new Promise(resolve => {\r\n         let fileReader = new FileReader()\r\n         fileReader.onload = () => resolve(fileReader.result)\r\n         //onloadend ?\r\n         // fileReader.readAsText(thisFile, 'CP1251')\r\n         fileReader.onprogress = function (data) {\r\n            if (data.lengthComputable) {\r\n               let progress = (data.loaded / data.total) * 100\r\n               document.querySelector('#blocWait .progress').style.width = `${progress}%`\r\n               //console.warn(progress);\r\n            }\r\n         }\r\n         fileReader.readAsText(thisFile, 'ISO-8859-1')\r\n      })\r\n\r\n      Promise.all([filePromise]).then(fileContents => {\r\n         // Promise.resolve([filePromise]).then(fileContents => {\r\n\r\n         let matchLineSearch, thisLogFormatted, result\r\n\r\n         matchLineSearch = /([\\[][0-9]{2}:[0-9]{2}] .*?: \\[.*?\\] [^\\[]+)$/gm\r\n         thisLogFormatted = fileContents.join('').match(new RegExp(matchLineSearch))\r\n\r\n         switch (mode) {\r\n            case 'langues' : {\r\n\r\n               matchLineSearch = /^([\\[][0-9]{2}:[0-9]{2}])\\s<color=lightgrey>\\s?(.*?\\s):?(\\(.*?\\)\\s)?(.*?)<\\/c.*?>$/gm\r\n               thisLogFormatted = fileContents.join('').match(new RegExp(matchLineSearch))\r\n\r\n               for (let index in thisLogFormatted) {\r\n                  let line = thisLogFormatted[index]\r\n                  let newLine\r\n                  newLine = line.replace(/<color=.*?>\\s?/g, '').replace(/<\\/c.*?>/g, '')\r\n                  thisLogFormatted[index] = /^([\\[][0-9]{2}:[0-9]{2}])\\s(.*?)(\\(.*\\)|:)\\s(.*?)$/gm.exec(newLine)\r\n               }\r\n\r\n               if (thisLogFormatted !== null) {\r\n                  languesLines.push({file: thisFile.name, lines: thisLogFormatted})\r\n               }\r\n               if (fileindex === listeFiles.length) {\r\n                  document.getElementById('languesListeRef').value = JSON.stringify(languesLines)\r\n                  body.classList.remove('wait')\r\n\r\n                  setupFileListing(allFiles.chatLog, false)\r\n                  sortFiles(document.getElementById('fileSort').checked)\r\n                  document.querySelector('#statsInfo .icon').classList.add('close')\r\n\r\n               }\r\n\r\n               // durationLang = performance.now() - startTime;\r\n               // console.log(`durée Lang : ${durationLang}ms`);\r\n\r\n            }\r\n               break\r\n            case 'search' : {\r\n\r\n               result = searchInFile(thisFile.name, thisLogFormatted, searchOptions)\r\n\r\n               if (result.datas.length > 0) {\r\n                  searchResult.push({fileName: thisFile.name, datas: result.datas, allPos: result.numPos})\r\n                  newFileListe.push(thisFile)\r\n               }\r\n\r\n               // let fileTotal = listeFiles.length\r\n               // fileTotal = fileTotal === 0 ? 1 : fileTotal -1\r\n               // if (fileindex === fileTotal) {\r\n               if (fileindex === listeFiles.length) {\r\n\r\n                  if (searchResult.length > 0) {\r\n\r\n                     searchResult.sort((a, b) => {\r\n                        return a.fileName.localeCompare(b.fileName)\r\n                     })\r\n\r\n                     newFileListe.sort((a, b) => {\r\n                        return a.name.localeCompare(b.name)\r\n                     })\r\n\r\n                     searchResult.forEach(item => {\r\n                        allPos.push(item.allPos)\r\n                     })\r\n\r\n                     setupFileListing(newFileListe, true, allPos)\r\n\r\n                     document.getElementById('arrayRefSearch').value = JSON.stringify(searchResult)\r\n                     document.querySelector('.table_container').classList.add('resize')\r\n                     let liToSelect = document.querySelector('#listing li.selected')\r\n                     if (!liToSelect) {\r\n                        liToSelect = document.querySelector('#listing li:first-child')\r\n                     }\r\n                     liToSelect.click()\r\n\r\n                  } else {\r\n\r\n                     const searchFail = document.querySelector('#searchFiles .search_fail')\r\n                     let searchFailedMsg\r\n\r\n                     if (/^fr\\b/.test(navigator.language)) {\r\n                        searchFailedMsg = searchFail.dataset.fr\r\n                     } else {\r\n                        searchFailedMsg = searchFail.dataset.en\r\n                     }\r\n\r\n                     searchFailedMsg = searchFailedMsg.replace(/(\\[\\s%%%\\s\\])/g, `<strong>[ ${searchOptions.termTosearch} ]</strong>`)\r\n\r\n                     searchFail.innerHTML = `<span>${searchFailedMsg}</span>`\r\n                     searchFail.classList.add('show')\r\n                     body.classList.remove('wait')\r\n                  }\r\n\r\n                  // durationSearch = performance.now() - startTime;\r\n                  // console.log(`durée SEARCH : ${durationSearch}ms`);\r\n\r\n               }\r\n            }\r\n               break\r\n            case 'process' : {\r\n\r\n               processLog(\r\n                   thisLogFormatted,\r\n                   thisFile.name,\r\n                   document.querySelector('.table_container').classList.contains('resize')\r\n               )\r\n\r\n               tableResultListeners()\r\n               body.classList.remove('wait')\r\n\r\n               // durationProcess = performance.now() - startTime;\r\n               //  console.log(`durée PROCESS : ${durationProcess}ms`);\r\n               //  console.log(`durée TOTALE : ${durationProcess + durationSearch}ms`);\r\n            }\r\n               break\r\n\r\n         }\r\n         fileindex++\r\n      })\r\n   }\r\n   // duration = performance.now() - startTime;\r\n   // console.log(`durée TOTALE : ${duration}ms`);\r\n}\r\n// ---------------------------------------------------------\r\n//    RECHERCHE DU TERME\r\n// ---------------------------------------------------------\r\nconst searchInFile = (thisFileName, thisLog, searchOptions) => {\r\n\r\n   //console.log(thisFileName)\r\n\r\n   let stringToFind = searchOptions.termTosearch\r\n   let index = 0\r\n   let allPos = 0\r\n   let pos, founded, newMessage, regEx, message, messageType\r\n   let arrayResult = {datas: [], numPos: ''}\r\n\r\n   let languageInThisLog = JSON.parse(document.getElementById('languesListeRef').value)\r\n   let resultSearchLang = languageInThisLog.find(item => item.file === thisFileName.replace('Chatlog', 'Combatlog'))\r\n\r\n   let maj = searchOptions.checkCasse ? '' : 'i' // sensible à la casse ? oui : non / i : insensitive\r\n\r\n   if (searchOptions.wholeWord) {\r\n      // mot entier\r\n      regEx = new RegExp(\"(?<=^|[^a-zA-ZÀ-ÖØ-öø-ÿ])(\" + stringToFind + \")(?=[^a-zA-ZÀ-ÖØ-öø-ÿ]|$)\", \"g\" + maj)\r\n      // -> double anti-slash \\\\ pour une expression en string\r\n   } else {\r\n      // bout de mot\r\n      regEx = new RegExp(stringToFind, \"g\" + maj)\r\n   }\r\n\r\n   // CombatLog\r\n   if (resultSearchLang !== undefined) {\r\n\r\n      let index = 0\r\n\r\n      resultSearchLang.lines.forEach(line => {\r\n\r\n         line[4] = line[4].replace(/(<span class=\"highlight\">.*?<\\/span>)/g, \"$&\")\r\n\r\n         let matchWord\r\n         while ((matchWord = regEx.exec(line[4])) !== null) {\r\n            if (matchWord.index === regEx.lastIndex) {\r\n               regEx.lastIndex++\r\n            }\r\n            founded = true\r\n            allPos++\r\n         }\r\n\r\n         if (founded)\r\n            line[4] = line[4].replace(regEx, '<span class=\"highlight\">$&</span>')\r\n\r\n         index++\r\n\r\n      })\r\n\r\n      languageInThisLog.splice(languageInThisLog.indexOf(resultSearchLang), 1, resultSearchLang)\r\n      document.getElementById('languesListeRef').value = JSON.stringify(languageInThisLog)\r\n\r\n   }\r\n\r\n\r\n   for (let thisLine of thisLog) {\r\n\r\n      //thisLine = thisLine.replaceAll(/<[^>]*>/g, \"\")\r\n\r\n      // récupère le début de la ligne : heure / compte / pj / msg type / message\r\n      // const search = /^[\\[][0-9]{2}:[0-9]{2}] \\[.*?\\].*?: (\\[.*?\\]) ([^\\[]+)$/gm\r\n      const search = /^[\\[][0-9]{2}:[0-9]{2}].\\[.*?\\].*?: (\\[.*?\\])(.*)$/gm\r\n      let whileMatch = search.exec(thisLine)\r\n\r\n      founded = false\r\n      pos = []\r\n      newMessage = []\r\n\r\n      if (whileMatch !== null) {\r\n\r\n         messageType = whileMatch[1].slice(1, -1).toLowerCase().trim()\r\n         message = whileMatch[2].replaceAll(/(\\r\\n|\\n|\\r)/gm, \"<br>\") // récup le message + remplace les sauts de ligne et retours chariot par '<br>'\r\n\r\n         // DMFI Modif Septirage\r\n         if (messageType.length === 10 && messageType === \"servertell\" && index - 1 > 0 && message.match(\"<C=#EDBAB2>\")) {\r\n\r\n            // message = message.replaceAll(/<[^>]*>/g, \"\")\r\n            message = message.replaceAll(/<(?!br\\s*\\/?)[^>]+>/g, \"\")\r\n\r\n            let prevLine = thisLog[index - 1].replaceAll(/<[^>]*>/g, \"\")\r\n            // let prevSearch = /^[\\[][0-9]{2}:[0-9]{2}] \\[.*?\\].*?: (\\[.*?\\]) ([^\\[]+)$/gm\r\n            let prevSearch = /^[\\[][0-9]{2}:[0-9]{2}] (.*?|\\[.*?\\].*?:) (\\[.*?\\])(.*)$/gm\r\n\r\n            let prevLineMatch = prevSearch.exec(prevLine)\r\n\r\n            messageType = prevLineMatch[2].slice(1, -1).toLowerCase().trim()\r\n\r\n            // let matchLang = /(^\\([^>]*\\)\\s:\\s)(.*)$/gm.exec(message)\r\n            let matchLang = /^\\[.*?\\]\\s\\((.*?)\\)\\s:\\s(.*?)$/gm.exec(message.trim())\r\n            if (matchLang !== null) {\r\n               message = `<span class=\"traduc\"><strong>${matchLang[1]}</strong> ${matchLang[2]}</span>`\r\n            }\r\n\r\n         } else {\r\n            // message = message.replaceAll(/<[^>]*>/g, \"\")\r\n            message = message.replaceAll(/<(?!br\\s*\\/?)[^>]+>/g, \"\")\r\n         }\r\n\r\n\r\n         if ((messageType === 'tell' && !searchOptions.msgExcludeMp) ||\r\n             (messageType === 'shout' && !searchOptions.msgExcludeShout) ||\r\n             (messageType === 'party' && !searchOptions.msgExcludeParty) ||\r\n             (messageType === 'talk' || messageType === 'whisper' || messageType === 'dialog')) {\r\n\r\n            // ChatLog\r\n            let matchWord\r\n\r\n            while ((matchWord = regEx.exec(message)) !== null) {\r\n               if (matchWord.index === regEx.lastIndex) {\r\n                  regEx.lastIndex++\r\n               }\r\n               founded = true\r\n               allPos++\r\n            }\r\n\r\n            if (founded) {\r\n               // newMessage.push(message.replace(regEx, `<span class=\"highlight\">${stringToFind}</span>`))\r\n               newMessage.push(message.replace(regEx, '<span class=\"highlight\">$&</span>'))\r\n            }\r\n\r\n         }\r\n\r\n      } else {\r\n         //console.log('SEARCH ERREUR')\r\n      }\r\n\r\n      if (founded) {\r\n         arrayResult.numPos = allPos\r\n         arrayResult.datas.push({\r\n            newMessage: newMessage,\r\n            numLigne: index,\r\n         })\r\n      }\r\n\r\n      index++\r\n\r\n   }\r\n\r\n   return arrayResult\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    MISE EN FORME DU LOG\r\n// ---------------------------------------------------------\r\n\r\nconst processLog = (thisLog, filename, resultByLine) => {\r\n\r\n   const fileContentTable = document.querySelector('#fileContent tbody')\r\n   const resultByLineTable = document.querySelector('#resultByLine tbody')\r\n\r\n   // Recherche le nom du PJ dans le nom du fichier\r\n   let filePjName = (/^(.*)([_]|[ (])(Chatlog)/g).exec(filename)\r\n   filePjName = filePjName[1].trim().replaceAll('_', ' ')\r\n\r\n   // Assigne une couleur pour chaque pj/pnj\r\n   const listColors = lineColorByName(thisLog, filePjName)\r\n\r\n   let formattedContent = []\r\n   let formattedSearch = []\r\n   let refResult, getRef, indexLine = 0\r\n   let addRefLine\r\n   let formattedTraducByLine// = ''\r\n   let refLangue = document.getElementById('languesListeRef').value\r\n   let languageInThisLog, getFileLangue\r\n\r\n   if (refLangue.length > 0) {\r\n      languageInThisLog = JSON.parse(refLangue)\r\n      getFileLangue = languageInThisLog.find(item => item.file === filename.replace('Chatlog', 'Combatlog'))\r\n   }\r\n\r\n   if (resultByLine) {\r\n      refResult = JSON.parse(document.getElementById('arrayRefSearch').value)\r\n      getRef = refResult.find(item => item.fileName === filename)\r\n   }\r\n\r\n   for (let thisLine of thisLog) {\r\n\r\n      // thisLine = thisLine.replaceAll(/<[^>]*>/g, \"\")\r\n      thisLine = thisLine.replaceAll(/(\\n\\r|\\r\\n|\\n|\\r)/gm, \"<br>\")\r\n\r\n\r\n      // regex : [00:00] [pseudo] (optionnel) Nom du PJ : [Type de message] -> jusqu'à la fin de l'entrée\r\n      // const search = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\]) ([^\\[]+)$/gm\r\n      const search = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\]) (.*?)$/gm\r\n\r\n      let match = search.exec(thisLine)\r\n      let dmfiSeptiLangue = false\r\n      let message = ''\r\n      let msg = ''\r\n\r\n      if (match !== null) {\r\n\r\n         let heure = match[1]\r\n         let pseudo = match[2] === undefined ? '(pnj ou dm)' : match[2].trim()\r\n         let pjName = match[3].trim().slice(0, -1)\r\n         let msgType = match[4]\r\n         msg = match[5]//.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"<br>\")\r\n\r\n         // DMFI Modif Septirage\r\n         // if (pseudo === '[Server]' && msgType === '[ServerTell]' && indexLine - 1 > 0) {\r\n         if (pseudo === '[Server]' && msgType === '[ServerTell]' && indexLine - 1 > 0 && msg.match(\"<C=#EDBAB2>\")) {\r\n\r\n            // msg = msg.replaceAll(/<[^>]*>/g, \"\")\r\n            // /<(?!br\\s*\\/?)[^>]+>/g, ''\r\n            msg = msg.replaceAll(/<(?!br\\s*\\/?)[^>]+>/g, \"\")\r\n            let prevLine = thisLog[indexLine - 1].replaceAll(/<[^>]*>/g, \"\")\r\n            // let prevSearch = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\]) ([^\\[]+)$/gm\r\n            let prevSearch = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\])(.*)$/gm\r\n            let prevLineMatch = prevSearch.exec(prevLine)\r\n\r\n            pseudo = prevLineMatch[2] === undefined ? \"(pnj ou dm)\" : prevLineMatch[2].trim()\r\n            pjName = prevLineMatch[3].trim().slice(0, -1)\r\n            msgType = prevLineMatch[4]\r\n\r\n            // let matchLang = /(^\\([^>]*\\)\\s:\\s)(.*)$/gm.exec(msg)\r\n            let matchLang = /^\\[.*?\\]\\s\\((.*?)\\)\\s:\\s(.*?)$/gm.exec(msg)\r\n            if (matchLang !== null) {\r\n               msg = `<span class=\"traduc\"><strong>${matchLang[1]}</strong> ${matchLang[2]}</span>`\r\n               dmfiSeptiLangue = true\r\n            }\r\n\r\n         } else {\r\n            // msg = msg.replaceAll(/<[^>]*>/g, \"\")\r\n            msg = msg.replaceAll(/<(?!br\\s*\\/?)[^>]+>/g, \"\")\r\n         }\r\n\r\n\r\n         // supprime les crochets + les espaces et passe tout en minuscule -> le type de message est utilisé en CSS.class\r\n         let msgClass = msgType.slice(1, -1).replaceAll(' ', '').toLowerCase()\r\n\r\n         // Masque / Affiche les colonnes pseudos\r\n         const hideColPseudo = document.getElementById('colPseudo').checked\r\n         let hideLinePseudo = hideColPseudo ? 'hide' : ''\r\n\r\n         // Masque / Affiche les colonnes type de message\r\n         const hideColDialogType = document.getElementById('colDialogType').checked\r\n         let hideLineMsgType = hideColDialogType ? 'hide' : ''\r\n\r\n         // Applique une couleur à chaque pj/pnj (si \"undefined\" -> message serveur -> gris par défaut)\r\n         let indexPjName = listColors.names.indexOf(pjName)\r\n         let lineColor = listColors.colors[indexPjName] === undefined ? '#b6c0ca' : listColors.colors[indexPjName]\r\n\r\n         // Recherche les émotes *...* et les mets en italique\r\n         let emotes = msg.split(/([*].*?[*])/g)\r\n\r\n         let formatMsg = ''\r\n         for (let emote of emotes) {\r\n            if (emote.includes('*')) {\r\n               formatMsg = formatMsg + `<span class=\"italic\">${emote}</span>`\r\n            } else if (emote !== '') {\r\n               formatMsg = formatMsg + emote\r\n            }\r\n            msg = formatMsg\r\n         }\r\n\r\n         // Tronque les noms de pj trop longs\r\n         let fullName, btn, maxChar = 23\r\n         fullName = pjName\r\n\r\n         if (pjName.length > maxChar) {\r\n            pjName = pjName.slice(0, maxChar) + '...'\r\n            btn = 'btn'\r\n         }\r\n\r\n         message = msg\r\n         let searchedLine = false\r\n         let searchedLineTraduc = false\r\n\r\n         // Ajoute les langues\r\n         let withTraduc = false\r\n         let getLangueLine\r\n         formattedTraducByLine = ''\r\n\r\n         if (getFileLangue !== undefined) {\r\n            getLangueLine = getFileLangue.lines.filter(line => line[1] === heure)\r\n            withTraduc = getLangueLine.length > 0\r\n         }\r\n\r\n         if (withTraduc) {\r\n\r\n            let thisItemLangue = getLangueLine[0]\r\n\r\n            if (thisItemLangue[2].trim() === fullName && (msgType !== '[Tell]' && msgType !== '[Party]')) {\r\n\r\n               formattedTraducByLine = `<span class=\"traduc\"><strong>${thisItemLangue[3]}</strong> ${thisItemLangue[4]}</span>`\r\n\r\n               let regHighLight = /(<span class=\"highlight\">.*?<\\/span>)/g\r\n               if (regHighLight.test(thisItemLangue[4])) {\r\n                  searchedLineTraduc = true\r\n               }\r\n\r\n               if (getFileLangue !== undefined) {\r\n                  getFileLangue.lines.shift()\r\n\r\n               }\r\n\r\n            }\r\n\r\n         }\r\n\r\n         // Met en surbrilance le mot recherché dans la colonne message, si rien, la ligne n'est pas modifiée\r\n         if (resultByLine && getRef !== undefined) {\r\n\r\n            addRefLine = getRef.datas.find(item => item.numLigne === indexLine)\r\n\r\n            if (addRefLine !== undefined && addRefLine.numLigne === indexLine) {\r\n               searchedLine = true\r\n               message = addRefLine.newMessage\r\n            }\r\n\r\n         }\r\n\r\n         message = message + formattedTraducByLine\r\n\r\n         let trClass = ''\r\n         if (dmfiSeptiLangue) {\r\n            // pseudo = ''\r\n            // pjName = ''\r\n            msgClass += ' no-svg'\r\n            trClass = 'class = \"traduc\"'\r\n         }\r\n\r\n         // Ligne du tableau à ajouter\r\n         let formattedLine = `<tr data-numPj = ${indexPjName} ${trClass}>\r\n                                 <td class=\"index\" data-index=\"${indexLine + 1}\">${indexLine + 1}</td>\r\n                                 <td class=\"heure\">${heure}</td>\r\n                                 <td class=\"pseudo ${hideLinePseudo}\" style=\"color: ${lineColor}\">${pseudo}</td>\r\n                                 <td class=\"pjName ${btn}\" style=\"color: ${lineColor}\" data-fullName = \"${fullName}\">${pjName}</td>\r\n                                 <td class=\"msgType ${msgClass} ${hideLineMsgType}\" title=\"${msgClass}\"><span>${msgType}</span></td>\r\n                                 <td class=\"message ${msgClass}\" style=\"color: ${lineColor}\"><div>${message}</div></td>                                 \r\n                              </tr>`\r\n\r\n         formattedContent.push(formattedLine)\r\n\r\n         // si un mot a été trouvé on ajoute la ligne au tableau des résultats\r\n         if (searchedLine || searchedLineTraduc) {\r\n            formattedSearch.push(formattedLine)\r\n         }\r\n\r\n      }\r\n\r\n      indexLine++\r\n\r\n   }\r\n\r\n   // Si résultat de recherche -> on charge le tableau [resultByLineTable]\r\n   if (resultByLine) {\r\n      resultByLineTable.innerHTML = formattedSearch.join('')\r\n      resultByLineTable.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"start\"})\r\n\r\n      const popupSearchFiles = document.getElementById('searchFiles')\r\n      popupSearchFiles.classList.replace('show', 'close')\r\n\r\n      const btnGoSearch = popupSearchFiles.querySelector('#goSearch')\r\n      if (/^fr\\b/.test(navigator.language)) {\r\n         btnGoSearch.textContent = btnGoSearch.dataset.frNext\r\n      } else {\r\n         btnGoSearch.textContent = btnGoSearch.dataset.enNext\r\n      }\r\n      popupSearchFiles.querySelector('#goNewSearch').classList.remove('disabled')\r\n\r\n   }\r\n\r\n   // Liste tous les participants du log\r\n   const statsInfoDetails = document.querySelector('#statsInfo')\r\n   let liLineName = []\r\n\r\n   statsInfoDetails.querySelector('.pj_count > span > span').textContent = listColors.names.length.toString()\r\n\r\n   for (let index in listColors.names) {\r\n      liLineName.push(`<li data-numPj=\"${index}\" style=\"color: ${listColors.colors[index]}\">\r\n                        <span>${listColors.names[index]}</span>\r\n                        <div><span class=\"num-speech\"></span>\r\n                        <span class=\"plus\" data-current-index=\"-1\"></span>\r\n                        <span class=\"moins\"></span></div></li>`)\r\n   }\r\n   statsInfoDetails.querySelector('.details').innerHTML = `<ul>${liLineName.join('')}</ul>`\r\n\r\n\r\n   // Charge le array \"formattedContent\" dans le tableau <table/>\r\n   fileContentTable.innerHTML = formattedContent.join('')\r\n\r\n   // Remonte en haut de la page.\r\n   fileContentTable.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"start\"})\r\n\r\n}\r\n\r\n// ---------------------------------------------------------\r\n//    GENERATION DU TABLEAU DE COULEURS\r\n// ---------------------------------------------------------\r\n\r\nconst generateColors = () => {\r\n\r\n   return [\r\n      \"hsl(306,51%,52%)\",\r\n      \"hsl(93, 100%, 30.2%)\",\r\n      \"hsl(240, 67.5%, 59%)\",\r\n      \"hsl(50,100%,20%)\",\r\n      // \"hsl(40,100%,23%)\",\r\n      \"hsl(183, 87.6%, 25.3%)\",\r\n      \"hsl(258,97%,60%)\",\r\n      \"hsl(116,84%,26%)\",\r\n      // \"hsl(344,62%,43%)\",\r\n      \"hsl(46,55%,30%)\",\r\n      \"hsl(186, 90%, 33%)\",\r\n      \"hsl(22, 92.4%, 46.3%)\",\r\n      \"hsl(225, 94.4%, 37%)\",\r\n      // \"hsl(162, 30.8%, 47.1%)\",\r\n      \"hsl(9,87%,42%)\",\r\n      \"#0095ff\",\r\n      // \"hsl(188, 100%, 32%)\",\r\n      // \"hsl(98, 86.9%, 42%)\",\r\n      \"hsl(280, 90%, 43%)\",\r\n      \"hsl(23, 88.3%, 45%)\",\r\n      \"hsl(162,46%,28%)\",\r\n      \"hsl(14, 100%, 62.5%)\",\r\n      // \"hsl(14,85%,41%)\",\r\n   ]\r\n\r\n}\r\n\r\nconst lineColorByName = (unLog, filename) => {\r\n\r\n   const listeColors = generateColors()\r\n   let num = 1\r\n   let tblPjName = {names: [], colors: []}\r\n\r\n   for (let uneLigne of unLog) {\r\n\r\n      let search = /^([\\[][0-9]{2}:[0-9]{2}])( \\[.*?\\])?(.*?: )(\\[.*?\\])/g\r\n      let match = search.exec(uneLigne)\r\n      let thePjName\r\n\r\n      if (match !== null) {\r\n         thePjName = match[3].trim().slice(0, -1)\r\n\r\n         if (tblPjName.names.indexOf(thePjName) === -1 && thePjName !== '') {\r\n            // let num = tblPjName.names.length\r\n            tblPjName.names.push(thePjName)\r\n            if (thePjName === filename) {\r\n               tblPjName.colors.push(listeColors[0])\r\n            } else {\r\n               tblPjName.colors.push(listeColors[num])\r\n            }\r\n            num++\r\n            if (num > listeColors.length - 1) {\r\n               num = 1\r\n            }\r\n            // tblPjName.colors.push(getRandomInt(360) * (num + 1) % 360)\r\n         }\r\n      }\r\n   }\r\n\r\n   // let delta = Math.trunc(360 / +tblPjName.names.length)\r\n\r\n   // for (let i in tblPjName.names) {\r\n   //\r\n   //    // tblPjName.colors.push(i * 40)\r\n   //    tblPjName.colors.push((Math.floor(Math.random() * Math.floor(360 / +tblPjName.names.length)) * i) % 360)\r\n   //\r\n   // }\r\n\r\n   return tblPjName\r\n\r\n}\r\n\r\nconst manageCopy = () => {\r\n   /*\r\n      document.body.addEventListener(\"paste\", function (e) {\r\n\r\n         e.preventDefault()\r\n\r\n         let clipboardData = e.clipboardData || window.clipboardData\r\n         let pastedData = clipboardData.getData('Text')\r\n\r\n         pastedData = pastedData.split(/\\n\\r|\\n/g)\r\n         const regExLine =/^(\\[(?:\\d|[01]\\d|2[0-3]):[0-5]\\d\\])\\s((?:[\\[]|[\\(]).*?(?:[\\]]|[\\)]))?(.*?)(\\[.*?\\])?.:.(.*?$)/gm\r\n         let matchReg = [{}]\r\n\r\n         console.log(pastedData)\r\n\r\n         pastedData.forEach(thisLine => {\r\n            let match = regExLine.exec(thisLine)\r\n            console.log(match)\r\n            if (match !== null) {\r\n               matchReg.push({\r\n                  heure: match[1],\r\n                  pseudo: match[2],\r\n                  pjName: match[3],\r\n                  dialogType: match[4],\r\n                  message: match[5],\r\n               })\r\n            }\r\n            // console.log(match)\r\n         })\r\n         console.log('matchReg : ', matchReg)\r\n\r\n\r\n         // let match = regExLine.exec(pastedData)\r\n         // console.log(pastedData)\r\n\r\n\r\n\r\n      })\r\n      */\r\n\r\n   document.body.addEventListener(\"copy\", function (e) {\r\n\r\n          e.preventDefault()\r\n\r\n          const copyText = document.querySelector(\"#fileContent\")\r\n          let range = document.getSelection()\r\n          let textToCopy = ''\r\n\r\n\r\n          if (range.isCollapsed) {\r\n\r\n             textToCopy = copyText.outerHTML\r\n             textToCopy = textToCopy.split('</tr>')\r\n\r\n          } else {\r\n\r\n             range = range.getRangeAt(0)\r\n             let ancestor = range.commonAncestorContainer\r\n             ancestor = ancestor.closest('#fileContent')\r\n\r\n             if (ancestor !== null) {\r\n\r\n                let allnodes = [...ancestor.querySelector('tbody').childNodes]\r\n\r\n                let startSelection = range.startContainer.parentNode\r\n                let endSelection = range.endContainer.parentNode\r\n                let selectedNodes = []\r\n\r\n                startSelection = startSelection.closest('tr')\r\n                endSelection = endSelection.closest('tr')\r\n\r\n                let startIndex = allnodes.indexOf(startSelection)\r\n                let endIndex = allnodes.indexOf(endSelection)\r\n\r\n                // let test = allnodes.slice(startIndex, endIndex + 1)\r\n\r\n                for (let i in allnodes) {\r\n                   let thisNode = allnodes[i]\r\n                   if (i >= startIndex && i <= endIndex) {\r\n                      selectedNodes.push(thisNode.innerHTML)\r\n                   }\r\n                }\r\n\r\n                textToCopy = selectedNodes\r\n             }\r\n\r\n          }\r\n\r\n          if (textToCopy !== '') {\r\n\r\n             for (let i in textToCopy) {\r\n\r\n                textToCopy[i] = textToCopy[i].replaceAll(/(\\r\\n|\\n|\\r)/gm, '')\r\n\r\n                let arrayTemp = textToCopy[i].split('</td>')\r\n                    .filter(lineHide => !lineHide.match(/<td class=\".*?hide\"[^>]*>/gm))\r\n                    .filter(lineIndex => !lineIndex.match(/<td class=\"index\"[^>]*>.*?[^<]+/gm))\r\n\r\n                for (let y in arrayTemp) {\r\n                   arrayTemp[y] = arrayTemp[y].replaceAll(/<td class=\"message[^>]*>/gm, ': ')\r\n                       .replaceAll(/<strong>/gm, '(')\r\n                       .replaceAll(/<\\/strong>/gm, ')')\r\n                       .replaceAll(/<[^>]*>/gm, '')\r\n                       .trim()\r\n                }\r\n\r\n                textToCopy[i] = arrayTemp.join(' ') + '\\r\\n'\r\n             }\r\n\r\n             textToCopy = textToCopy.join('').trim()\r\n\r\n             //e.clipboardData.setData(\"text/uri-list\", copyText.outerHTML)\r\n\r\n             navigator.clipboard.writeText(textToCopy).then(\r\n                 function () {\r\n                    console.log(\"copie ok\")\r\n                 })\r\n                 .catch(\r\n                     function () {\r\n                        alert(\"Erreur à la copie\"); // error\r\n                     })\r\n\r\n          }\r\n\r\n          // textArea.textContent = e.clipboardData.getData(\"text/uri-list\")\r\n          // textArea.value = e.clipboardData.getData(\"text/uri-list\")\r\n\r\n          //textArea.click();\r\n\r\n          // console.log(e.clipboardData.getData(\"text/uri-list\"))\r\n\r\n\r\n       }\r\n   )\r\n\r\n\r\n}\r\n\r\n\r\n// Attend que la page soit TOTALEMENT chargée\r\nif (document.readyState === \"complete\" || (document.readyState !== \"loading\" && !document.documentElement.doScroll)) {\r\n   domLoaded()\r\n} else {\r\n   document.addEventListener(\"DOMContentLoaded\", domLoaded)\r\n}\r\n\r\n","if (module.hot) {\r\n  module.hot.accept(function () {\r\n    window.location.reload()\r\n  })\r\n}\r\n\r\n\r\n// import './vendor/modernizr'\r\nimport './plugins'\r\nimport './global'\r\n//import './test'\r\n\r\n\r\n\r\n\r\n\r\n"]}